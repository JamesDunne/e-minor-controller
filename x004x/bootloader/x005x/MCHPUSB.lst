MP2COD 4.03, COFF to COD File Converter
Copyright (c) 2006 Microchip Technology Inc.
Listing File Generated: Fri Apr 06 12:39:45 2007


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /*********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                Microchip USB Bootloader Version 1.0                           C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * FileName:        main.c                                                       C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Dependencies:    See INCLUDES section below                                   C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Processor:       PIC18                                                        C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Compiler:        C18 2.30.01+                                                 C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Company:         Microchip Technology, Inc.                                   C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Software License Agreement                                                    C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * civil liability for the breach of the terms and conditions of this            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * license.                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Author               Date        Comment                                      C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Rawin Rojvanit       11/19/04     Original.                                   C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            ********************************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           /** I N C L U D E S **********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #include "c_micrdef.h"                                                           C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #include "typedefs.h"                        // Required                         C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #include "usb.h"                         // Required                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #include "io_cfg.h"                                 // Required                  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #include "usb_compile_time_validation.h" // Optional                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #define	REMAPPED_RESET_VECTOR		0xA00                                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           /** CONFIGURATION BITS ********************************************************/ C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config PLLDIV = 2,		CPUDIV = OSC4_PLL6,		USBDIV = 2                      C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config FOSC = HSPLL_HS,	FCMEM = OFF,			IESO = OFF                        C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config PWRT = ON,		BOR = ON, 				BORV = 2,		VREGEN = ON                  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config WDT = OFF	//,		WDTPS = 128                                        C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config MCLRE = ON,		LPT1OSC = OFF,			PBADEN = OFF,	CCP2MX = ON           C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config STVREN = ON,		LVP = OFF,				ICPRT = OFF,	XINST = OFF,	DEBUG = OFF C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config CP0 = OFF,		CP1 = OFF,				CP2 = OFF                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config CPB = OFF,		CPD = OFF                                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config WRT0 = OFF,		WRT1 = OFF,				WRT2 = OFF                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config WRTC = OFF,		WRTB = OFF,				WRTD = OFF                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config EBTR0 = OFF,		EBTR1 = OFF,			EBTR2 = OFF                          C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma config EBTRB = OFF                                                       C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           /** V A R I A B L E S ********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma udata                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           void BOOT_LOAD_MODE (void);                                                      C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           /** V E C T O R  R E M A P P I N G *******************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma code _HIGH_INTERRUPT_VECTOR = 0x000008                                   C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           void _high_ISR (void)                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000008   ef04     GOTO      0xa08              _asm goto RM_HIGH_INTERRUPT_VECTOR  _endasm                                  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00000a   f005                                                                                                               
00000c   0012     RETURN    0x0            }                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma code _LOW_INTERRUPT_VECTOR = 0x000018                                    C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           void _low_ISR (void)                                                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000018   ef0c     GOTO      0xa18              _asm goto RM_LOW_INTERRUPT_VECTOR  _endasm                                   C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00001a   f005                                                                                                               
00001c   0012     RETURN    0x0            }                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma code	USBBOOT                                                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma code	USBBOOT                                                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Function:        void main(void)                                              C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Overview:        Main program entry point.                                    C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           extern	void StartOfLine(void);                                                   C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           void main(void)                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           //    byte temp;                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           	unsigned char Temp0;                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           //    temp = ADCON1;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           //    ADCON1 |= 0x0F;                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00001e   9c94     BCF       0x94,0x6,0x0    	DDRCbits.RC6=0;				// Setup tx pin                                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           //	DDRC.RC7=1;					// Setup rx pin                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000020   0e90     MOVLW     0x90           	RCSTA=0x90;	//b'10010000';	// Setup rx and tx                                   C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000022   6eab     MOVWF     0xab,0x0                                                                                        
000024   0e46     MOVLW     0x46           	TXSTA=0x46;	//b'00100110';		                                                    C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000026   6eac     MOVWF     0xac,0x0                                                                                        
000028   88ab     BSF       0xab,0x4,0x0   	RCSTAbits.CREN=1;			// Start receiving                                          C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00002a   50ae     MOVF      0xae,0x0,0x0   	WREG=RCREG;					// Empty the buffer                                             C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00002c   6ee8     MOVWF     0xe8,0x0                                                                                        
00002e   50ae     MOVF      0xae,0x0,0x0   	WREG=RCREG;                                                                     C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000030   6ee8     MOVWF     0xe8,0x0                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                               //TRISBbits.TRISB4 = 1;     // Reset value is already '1'                    C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           //Check Bootload Mode Entry Condition                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000032   a881     BTFSS     0x81,0x4,0x0       if(PORTBbits.RB4 == 1)      // If not pressed, User Mode                     C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000034   d002     BRA       0x3a                                                                                            
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000036   ef00     GOTO      0xa00                  _asm goto REMAPPED_RESET_VECTOR _endasm                                  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000038   f005                                                                                                               
                                               }                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00003a   d803     RCALL     0x42           	BOOT_LOAD_MODE();                                                               C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00003c   ef00     GOTO      0xa00          _asm goto REMAPPED_RESET_VECTOR _endasm                                          C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00003e   f005                                                                                                               
000040   0012     RETURN    0x0            }//end main                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           void BOOT_LOAD_MODE (void) {                                                     C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                               //Bootload Mode                                                              C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                               //mInitAllLEDs();                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000042   0e14     MOVLW     0x14               mInitializeUSBDriver();     // See usbdrv.h                                  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000044   6e6f     MOVWF     0x6f,0x0                                                                                        
000046   ecb6     CALL      0x56c,0x0          USBCheckBusStatus();        // Modified to always enable USB module          C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000048   f002                                                                                                               
000058   d7f8     BRA       0x4a               while(1){                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00004a   0004     CLRWDT                   		_asm clrwdt _endasm                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00004c   9a93     BCF       0x93,0x5,0x0   	    TRISBbits.TRISB5 = 0;     //make that pin an output                         C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00004e   7a8a     BTG       0x8a,0x5,0x0   		LATBbits.LATB5 = !LATBbits.LATB5;                                              C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000050   ecc1     CALL      0x582,0x0              USBDriverService();     // See usbdrv.c                                  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000052   f002                                                                                                               
000054   ecbe     CALL      0x17c,0x0              BootService();          // See boot.c                                    C:\fw\midicontroller\x001x\bootloader\x005x\main.c
000056   f000                                                                                                               
                                              	}//end while                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\main.c
00005a   0012     RETURN    0x0            }//end function                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           #pragma code user = RM_RESET_VECTOR                                              C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           /** EOF main.c ***************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\main.c
                                           /*********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *      Microchip USB C18 Firmware -  USB Bootloader Version 1.00                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * FileName:        boot.c                                                       C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Dependencies:    See INCLUDES section below                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Processor:       PIC18                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Compiler:        C18 2.30.01+                                                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Company:         Microchip Technology, Inc.                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Software License Agreement                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * civil liability for the breach of the terms and conditions of this            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * license.                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Author               Date        Comment                                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Rawin Rojvanit       11/19/04    Original. USB Bootloader                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            ********************************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * -boot.c-                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * This file contains functions necessary to carry out bootloading tasks.        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * The only 2 USB specific functions are BootInitEP() and BootService().         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * All other functions can be reused with other communication methods.           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /** I N C L U D E S **********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #include "c_micrdef.h"                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #include "typedefs.h"                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #include "usb.h"                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #include "io_cfg.h"                                                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /** V A R I A B L E S ********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #pragma udata                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           byte counter;                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           byte byteTemp;                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           byte trf_state;                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           word big_counter;                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           //void BlinkUSBStatus(void);                                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #pragma code	USBBOOT                                                             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /** C L A S S  S P E C I F I C  R E Q ****************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /** U S E R  A P I ***********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Function:        void BootInitEP(void)                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Overview:        BootInitEP initializes bootloader endpoints, buffer          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                  descriptors, internal state-machine, and variables.          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                  It should be called after the USB host has sent out a        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                  SET_CONFIGURATION request.                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                  See USBStdSetCfgHandler() in usb9.c for examples.            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void BootInitEP(void)                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00005c   0100     MOVLB     0x0                trf_state = WAIT_FOR_CMD;                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00005e   6b77     CLRF      0x77,0x1                                                                                        
000060   0e1e     MOVLW     0x1e               BOOT_UEP = EP_OUT_IN|HSHK_EN;               // Enable 2 data pipes           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000062   6e71     MOVWF     0x71,0x0                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                * Do not have to init Cnt of IN pipes here.                                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                * Reason:  Number of bytes to send to the host                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                *          varies from one transaction to                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                *          another. Cnt should equal the exact                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                *          number of bytes to transmit for                                  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                *          a given IN transaction.                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                *          This number of bytes will only                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                *          be known right before the data is                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                *          sent.                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000064   0104     MOVLB     0x4                BOOT_BD_OUT.Cnt = sizeof(dataPacket);   // Set buffer size                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000066   0e40     MOVLW     0x40                                                                                            
000068   6f09     MOVWF     0x9,0x1                                                                                         
00006a   0e20     MOVLW     0x20               BOOT_BD_OUT.ADR = (byte*)&dataPacket;   // Set buffer address                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00006c   6f0a     MOVWF     0xa,0x1                                                                                         
00006e   0e04     MOVLW     0x4                                                                                             
000070   6f0b     MOVWF     0xb,0x1                                                                                         
000072   0e88     MOVLW     0x88               BOOT_BD_OUT.Stat._byte = _USIE|_DAT0|_DTSEN;// Set status                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000074   6f08     MOVWF     0x8,0x1                                                                                         
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000076   0104     MOVLB     0x4                BOOT_BD_IN.ADR = (byte*)&dataPacket;    // Set buffer address                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000078   0e20     MOVLW     0x20                                                                                            
00007a   6f0e     MOVWF     0xe,0x1                                                                                         
00007c   0e04     MOVLW     0x4                                                                                             
00007e   6f0f     MOVWF     0xf,0x1                                                                                         
000080   0e40     MOVLW     0x40               BOOT_BD_IN.Stat._byte = _UCPU|_DAT1;    // Set buffer status                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000082   6f0c     MOVWF     0xc,0x1                                                                                         
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000084   0012     RETURN    0x0            }//end BootInitEP                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void StartWrite(void)                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                * A write command can be prematurely terminated by MCLR or WDT reset        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000086   0e55     MOVLW     0x55               EECON2 = 0x55;                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000088   6ea7     MOVWF     0xa7,0x0                                                                                        
00008a   0eaa     MOVLW     0xaa               EECON2 = 0xAA;                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00008c   6ea7     MOVWF     0xa7,0x0                                                                                        
00008e   82a6     BSF       0xa6,0x1,0x0       EECON1_WR = 1;                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000090   0012     RETURN    0x0            }//end StartWrite                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void ReadVersion(void) //TESTED: Passed                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000092   0104     MOVLB     0x4                dataPacket._byte[2] = MINOR_VERSION;                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000094   6b22     CLRF      0x22,0x1                                                                                        
000096   0e01     MOVLW     0x1                dataPacket._byte[3] = MAJOR_VERSION;                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000098   6f23     MOVWF     0x23,0x1                                                                                        
00009a   0012     RETURN    0x0            }//end ReadVersion                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void ReadProgMem(void) //TESTED: Passed                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00009c   0100     MOVLB     0x0                for (counter = 0; counter < dataPacket.len; counter++)                       C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00009e   6b75     CLRF      0x75,0x1                                                                                        
0000a0   d8fd     RCALL     0x29c                                                                                           
0000a2   e20a     BC        0xb8                                                                                            
0000b4   2b75     INCF      0x75,0x1,0x1                                                                                    
0000b6   d7f4     BRA       0xa0                                                                                            
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   //2 separate inst prevents compiler from using RAM stack                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000a4   d908     RCALL     0x2b6                  byteTemp = *((dataPacket.ADR.pAdr)+counter);                             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000a6   0008     TBLRD                                                                                                     
0000a8   cff5     MOVFF     0xff5,0x76                                                                                      
0000aa   f076                                                                                                               
0002b6   c075     MOVFF     0x75,0x0                                                                                        
0002b8   f000                                                                                                               
0002ba   6a01     CLRF      0x1,0x0                                                                                         
0002bc   6a02     CLRF      0x2,0x0                                                                                         
0002be   ef38     GOTO      0x270                                                                                           
0002c0   f001                                                                                                               
                                           #ifndef READ_PROTECT                                                             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           	#ifdef ENCRYPTION_ENABLED                                                       C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   dataPacket.data[counter] = ENCRYPTION_MASK ^ byteTemp;                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           	#else                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000ac   0100     MOVLB     0x0                    dataPacket.data[counter] = byteTemp;                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000ae   d8ef     RCALL     0x28e                                                                                           
0000b0   c076     MOVFF     0x76,0xfef                                                                                      
0000b2   ffef                                                                                                               
                                           	#endif                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #else                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           	dataPacket.data[counter] = 0;                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               }//end for                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000b8   6af8     CLRF      0xf8,0x0           TBLPTRU = 0x00;         // forces upper byte back to 0x00                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                       // optional fix is to set large code model           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000ba   0012     RETURN    0x0            }//end ReadProgMem                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void WriteProgMem(void) //TESTED: Passed                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                * The write holding register for the 18F4550 family is                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                * actually 32-byte. The code below only tries to write                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                * 16-byte because the GUI program only sends out 16-byte                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                * at a time.                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                * This limitation will be fixed in the future version.                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000bc   0ef0     MOVLW     0xf0               dataPacket.ADR.low &= 0b11110000;  //Force 16-byte boundary                  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000be   0104     MOVLB     0x4                                                                                             
0000c0   1722     ANDWF     0x22,0x1,0x1                                                                                    
0000c2   0e84     MOVLW     0x84               EECON1 = 0b10000100;        //Setup writes: EEPGD=1,WREN=1                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000c4   6ea6     MOVWF     0xa6,0x0                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               //LEN = # of byte to write                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000c6   0100     MOVLB     0x0                for (counter = 0; counter < (dataPacket.len); counter++)                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000c8   6b75     CLRF      0x75,0x1                                                                                        
0000ca   d8e8     RCALL     0x29c                                                                                           
0000cc   e20a     BC        0xe2                                                                                            
0000dc   0100     MOVLB     0x0                                                                                             
0000de   2b75     INCF      0x75,0x1,0x1                                                                                    
0000e0   d7f4     BRA       0xca                                                                                            
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #ifdef ENCRYPTION_ENABLED                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   *((dataPacket.ADR.pAdr)+counter) = \                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   ENCRYPTION_MASK ^ dataPacket.data[counter];                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #else                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000ce   d8eb     RCALL     0x2a6                  *((dataPacket.ADR.pAdr)+counter) = \                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0002a6   dff3     RCALL     0x28e                                                                                           
0002a8   cfef     MOVFF     0xfef,0x3                                                                                       
0002aa   f003                                                                                                               
0002ac   d804     RCALL     0x2b6                                                                                           
0002ae   c003     MOVFF     0x3,0xff5                                                                                       
0002b0   fff5                                                                                                               
0002b2   000c     TBLWT                                                                                                     
0002b4   0012     RETURN    0x0                                                                                             
                                                   dataPacket.data[counter];                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000d0   0e0f     MOVLW     0xf                    if ((counter & 0b00001111) == 0b00001111)                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000d2   0100     MOVLB     0x0                                                                                             
0000d4   1575     ANDWF     0x75,0x0,0x1                                                                                    
0000d6   080f     SUBLW     0xf                                                                                             
0000d8   e101     BNZ       0xdc                                                                                            
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000da   dfd5     RCALL     0x86                       StartWrite();                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   }//end if                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               }//end for                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000e2   0012     RETURN    0x0            }//end WriteProgMem                                                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void EraseProgMem(void) //TESTED: Passed                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               //The most significant 16 bits of the address pointer points to the block    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               //being erased. Bits5:0 are ignored. (In hardware).                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               //LEN = # of 64-byte block to erase                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000e4   0e94     MOVLW     0x94               EECON1 = 0b10010100;     //Setup writes: EEPGD=1,FREE=1,WREN=1               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000e6   6ea6     MOVWF     0xa6,0x0                                                                                        
0000e8   0100     MOVLB     0x0                for(counter=0; counter < dataPacket.len; counter++)                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000ea   6b75     CLRF      0x75,0x1                                                                                        
0000ec   d8d7     RCALL     0x29c                                                                                           
0000ee   e211     BC        0x112                                                                                           
00010c   0100     MOVLB     0x0                                                                                             
00010e   2b75     INCF      0x75,0x1,0x1                                                                                    
000110   d7ed     BRA       0xec                                                                                            
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000f0   5175     MOVF      0x75,0x0,0x1           *(dataPacket.ADR.pAdr+(((int)counter) << 6));  //Load TBLPTR             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0000f2   6e00     MOVWF     0x0,0x0                                                                                         
0000f4   6a01     CLRF      0x1,0x0                                                                                         
0000f6   0e06     MOVLW     0x6                                                                                             
0000f8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0000fa   3600     RLCF      0x0,0x1,0x0                                                                                     
0000fc   3601     RLCF      0x1,0x1,0x0                                                                                     
0000fe   04e8     DECF      0xe8,0x0,0x0                                                                                    
000100   e1fb     BNZ       0xf8                                                                                            
000102   6a02     CLRF      0x2,0x0                                                                                         
000104   be01     BTFSC     0x1,0x7,0x0                                                                                     
000106   6802     SETF      0x2,0x0                                                                                         
000108   d8b3     RCALL     0x270                                                                                           
00010a   dfbd     RCALL     0x86                   StartWrite();                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               }//end for                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000112   6af8     CLRF      0xf8,0x0           TBLPTRU = 0;            // forces upper byte back to 0x00                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                       // optional fix is to set large code model           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                       // (for USER ID 0x20 0x00 0x00)                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000114   0012     RETURN    0x0            }//end EraseProgMem                                                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void ReadEE(void) //TESTED: Passed                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000116   6aa6     CLRF      0xa6,0x0           EECON1 = 0x00;                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000118   0100     MOVLB     0x0                for(counter=0; counter < dataPacket.len; counter++)                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00011a   6b75     CLRF      0x75,0x1                                                                                        
00011c   d8bf     RCALL     0x29c                                                                                           
00011e   e20b     BC        0x136                                                                                           
000132   2b75     INCF      0x75,0x1,0x1                                                                                    
000134   d7f3     BRA       0x11c                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000120   0104     MOVLB     0x4                    EEADR = (byte)dataPacket.ADR.pAdr + counter;                             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000122   5122     MOVF      0x22,0x0,0x1                                                                                    
000124   0100     MOVLB     0x0                                                                                             
000126   2575     ADDWF     0x75,0x0,0x1                                                                                    
000128   6ea9     MOVWF     0xa9,0x0                                                                                        
                                                   //EEADRH = (BYTE)(((int)dataPacket.FIELD.ADDR.POINTER + counter) >> 8);  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00012a   80a6     BSF       0xa6,0x0,0x0           EECON1_RD = 1;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00012c   d8b0     RCALL     0x28e                  dataPacket.data[counter] = EEDATA;                                       C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00012e   cfa8     MOVFF     0xfa8,0xfef                                                                                     
000130   ffef                                                                                                               
                                               }//end for                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000136   0012     RETURN    0x0            }//end ReadEE                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void WriteEE(void) //TESTED: Passed                                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000138   0100     MOVLB     0x0                for(counter=0; counter < dataPacket.len; counter++)                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00013a   6b75     CLRF      0x75,0x1                                                                                        
00013c   d8af     RCALL     0x29c                                                                                           
00013e   e210     BC        0x160                                                                                           
00015a   0100     MOVLB     0x0                                                                                             
00015c   2b75     INCF      0x75,0x1,0x1                                                                                    
00015e   d7ee     BRA       0x13c                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000140   0104     MOVLB     0x4                    EEADR = (byte)dataPacket.ADR.pAdr + counter;                             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000142   5122     MOVF      0x22,0x0,0x1                                                                                    
000144   0100     MOVLB     0x0                                                                                             
000146   2575     ADDWF     0x75,0x0,0x1                                                                                    
000148   6ea9     MOVWF     0xa9,0x0                                                                                        
                                                   //EEADRH = (BYTE)(((int)dataPacket.FIELD.ADDR.POINTER + counter) >> 8);  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00014a   d8a1     RCALL     0x28e                  EEDATA = dataPacket.data[counter];                                       C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00014c   50ef     MOVF      0xef,0x0,0x0                                                                                    
00014e   6ea8     MOVWF     0xa8,0x0                                                                                        
000150   0e04     MOVLW     0x4                    EECON1 = 0b00000100;    //Setup writes: EEPGD=0,WREN=1                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000152   6ea6     MOVWF     0xa6,0x0                                                                                        
000154   df98     RCALL     0x86                   StartWrite();                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000156   b2a6     BTFSC     0xa6,0x1,0x0           while(EECON1_WR);       //Wait till WR bit is clear                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000158   d7fe     BRA       0x156                                                                                           
                                               }//end for                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000160   0012     RETURN    0x0            }//end WriteEE                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           //WriteConfig is different from WriteProgMem b/c it can write a byte             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void WriteConfig(void) //TESTED: Passed                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000162   0ec4     MOVLW     0xc4               EECON1 = 0b11000100;        //Setup writes: EEPGD=1,CFGS=1,WREN=1            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000164   6ea6     MOVWF     0xa6,0x0                                                                                        
000166   0100     MOVLB     0x0                for (counter = 0; counter < dataPacket.len; counter++)                       C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000168   6b75     CLRF      0x75,0x1                                                                                        
00016a   d898     RCALL     0x29c                                                                                           
00016c   e205     BC        0x178                                                                                           
000172   0100     MOVLB     0x0                                                                                             
000174   2b75     INCF      0x75,0x1,0x1                                                                                    
000176   d7f9     BRA       0x16a                                                                                           
00029c   0104     MOVLB     0x4                                                                                             
00029e   5121     MOVF      0x21,0x0,0x1                                                                                    
0002a0   0100     MOVLB     0x0                                                                                             
0002a2   5d75     SUBWF     0x75,0x0,0x1                                                                                    
0002a4   0012     RETURN    0x0                                                                                             
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00016e   d89b     RCALL     0x2a6                  *((dataPacket.ADR.pAdr)+counter) = \                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000270   0104     MOVLB     0x4                                                                                             
000272   5122     MOVF      0x22,0x0,0x1                                                                                    
000274   2400     ADDWF     0x0,0x0,0x0                                                                                     
000276   6ef3     MOVWF     0xf3,0x0                                                                                        
000278   5123     MOVF      0x23,0x0,0x1                                                                                    
00027a   2001     ADDWFC    0x1,0x0,0x0                                                                                     
00027c   6ef4     MOVWF     0xf4,0x0                                                                                        
00027e   5124     MOVF      0x24,0x0,0x1                                                                                    
000280   2002     ADDWFC    0x2,0x0,0x0                                                                                     
000282   6ef8     MOVWF     0xf8,0x0                                                                                        
000284   cff4     MOVFF     0xff4,0xff7                                                                                     
000286   fff7                                                                                                               
000288   cff3     MOVFF     0xff3,0xff6                                                                                     
00028a   fff6                                                                                                               
00028c   0012     RETURN    0x0                                                                                             
00028e   5175     MOVF      0x75,0x0,0x1                                                                                    
000290   6aea     CLRF      0xea,0x0                                                                                        
000292   0f25     ADDLW     0x25                                                                                            
000294   6ee9     MOVWF     0xe9,0x0                                                                                        
000296   0e04     MOVLW     0x4                                                                                             
000298   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00029a   0012     RETURN    0x0                                                                                             
                                                   dataPacket.data[counter];                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000170   df8a     RCALL     0x86                   StartWrite();                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               }//end for                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000178   6af8     CLRF      0xf8,0x0           TBLPTRU = 0x00;         // forces upper byte back to 0x00                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                       // optional fix is to set large code model           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00017a   0012     RETURN    0x0            }//end WriteConfig                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           void BootService(void)                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           //    BlinkUSBStatus();                                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00017c   0e06     MOVLW     0x6                if((usb_device_state < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00017e   0100     MOVLB     0x0                                                                                             
000180   5d7a     SUBWF     0x7a,0x0,0x1                                                                                    
000182   e303     BNC       0x18a                                                                                           
000184   506d     MOVF      0x6d,0x0,0x0                                                                                    
000186   0b02     ANDLW     0x2                                                                                             
000188   e001     BZ        0x18c                                                                                           
00018a   d071     BRA       0x26e                                                                                           
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00018c   0100     MOVLB     0x0                if(trf_state == SENDING_RESP)                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00018e   0577     DECF      0x77,0x0,0x1                                                                                    
000190   e111     BNZ       0x1b4                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000192   0104     MOVLB     0x4                    if(!mBootTxIsBusy())                                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000194   bf0c     BTFSC     0xc,0x7,0x1                                                                                     
000196   d00d     BRA       0x1b2                                                                                           
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000198   0104     MOVLB     0x4                        BOOT_BD_OUT.Cnt = sizeof(dataPacket);                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00019a   0e40     MOVLW     0x40                                                                                            
00019c   6f09     MOVWF     0x9,0x1                                                                                         
00019e   0e40     MOVLW     0x40                       mUSBBufferReady(BOOT_BD_OUT);                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001a0   0104     MOVLB     0x4                                                                                             
0001a2   1708     ANDWF     0x8,0x1,0x1                                                                                     
0001a4   0104     MOVLB     0x4                                                                                             
0001a6   7d08     BTG       0x8,0x6,0x1                                                                                     
0001a8   0e88     MOVLW     0x88                                                                                            
0001aa   0104     MOVLB     0x4                                                                                             
0001ac   1308     IORWF     0x8,0x1,0x1                                                                                     
0001ae   0100     MOVLB     0x0                        trf_state = WAIT_FOR_CMD;                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001b0   6b77     CLRF      0x77,0x1                                                                                        
                                                   }//end if                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001b2   d05d     BRA       0x26e                  return;                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               }//end if                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001b4   0104     MOVLB     0x4                if(!mBootRxIsBusy())                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001b6   bf08     BTFSC     0x8,0x7,0x1                                                                                     
0001b8   d05a     BRA       0x26e                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001ba   0100     MOVLB     0x0                    counter = 0;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001bc   6b75     CLRF      0x75,0x1                                                                                        
0001be   0104     MOVLB     0x4                    switch(dataPacket.CMD)                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001c0   5120     MOVF      0x20,0x0,0x1                                                                                    
0001c2   0aff     XORLW     0xff                                                                                            
0001c4   e034     BZ        0x22e                                                                                           
0001c6   0af8     XORLW     0xf8                                                                                            
0001c8   e02d     BZ        0x224                                                                                           
0001ca   0a02     XORLW     0x2                                                                                             
0001cc   e026     BZ        0x21a                                                                                           
0001ce   0a01     XORLW     0x1                                                                                             
0001d0   e01f     BZ        0x210                                                                                           
0001d2   0a07     XORLW     0x7                                                                                             
0001d4   e018     BZ        0x206                                                                                           
0001d6   0a01     XORLW     0x1                                                                                             
0001d8   e011     BZ        0x1fc                                                                                           
0001da   0a03     XORLW     0x3                                                                                             
0001dc   e00a     BZ        0x1f2                                                                                           
0001de   0a07     XORLW     0x7                                                                                             
0001e0   e008     BZ        0x1f2                                                                                           
0001e2   0a06     XORLW     0x6                                                                                             
0001e4   e001     BZ        0x1e8                                                                                           
0001e6   d032     BRA       0x24c                                                                                           
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case READ_VERSION:                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001e8   df54     RCALL     0x92                           ReadVersion();                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001ea   0100     MOVLB     0x0                            counter=0x04;                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001ec   0e04     MOVLW     0x4                                                                                             
0001ee   6f75     MOVWF     0x75,0x1                                                                                        
0001f0   d02e     BRA       0x24e                          break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           			                                                                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case READ_FLASH:                                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case READ_CONFIG:                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001f2   df54     RCALL     0x9c                           ReadProgMem();                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001f4   0e05     MOVLW     0x5                            counter+=0x05;                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001f6   0100     MOVLB     0x0                                                                                             
0001f8   2775     ADDWF     0x75,0x1,0x1                                                                                    
0001fa   d029     BRA       0x24e                          break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           			                                                                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case WRITE_FLASH:                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001fc   df5f     RCALL     0xbc                           WriteProgMem();                                                  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
0001fe   0100     MOVLB     0x0                            counter=0x01;                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000200   0e01     MOVLW     0x1                                                                                             
000202   6f75     MOVWF     0x75,0x1                                                                                        
000204   d024     BRA       0x24e                          break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case ERASE_FLASH:                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000206   df6e     RCALL     0xe4                           EraseProgMem();                                                  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000208   0100     MOVLB     0x0                            counter=0x01;                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00020a   0e01     MOVLW     0x1                                                                                             
00020c   6f75     MOVWF     0x75,0x1                                                                                        
00020e   d01f     BRA       0x24e                          break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case READ_EEDATA:                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000210   df82     RCALL     0x116                          ReadEE();                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000212   0e05     MOVLW     0x5                            counter+=0x05;                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000214   0100     MOVLB     0x0                                                                                             
000216   2775     ADDWF     0x75,0x1,0x1                                                                                    
000218   d01a     BRA       0x24e                          break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case WRITE_EEDATA:                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00021a   df8e     RCALL     0x138                          WriteEE();                                                       C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00021c   0100     MOVLB     0x0                            counter=0x01;                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00021e   0e01     MOVLW     0x1                                                                                             
000220   6f75     MOVWF     0x75,0x1                                                                                        
000222   d015     BRA       0x24e                          break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case WRITE_CONFIG:                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000224   df9e     RCALL     0x162                          WriteConfig();                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000226   0100     MOVLB     0x0                            counter=0x01;                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000228   0e01     MOVLW     0x1                                                                                             
00022a   6f75     MOVWF     0x75,0x1                                                                                        
00022c   d010     BRA       0x24e                          break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case RESET:                                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           //When resetting, make sure to drop the device off the bus       C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           //for a period of time. Helps when the device is suspended.      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00022e   966d     BCF       0x6d,0x3,0x0                   UCONbits.USBEN = 0;                                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000230   0100     MOVLB     0x0                            big_counter = 0;                                                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000232   6b78     CLRF      0x78,0x1                                                                                        
000234   6b79     CLRF      0x79,0x1                                                                                        
000236   0100     MOVLB     0x0                            while(--big_counter);                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000238   0778     DECF      0x78,0x1,0x1                                                                                    
00023a   0e00     MOVLW     0x0                                                                                             
00023c   5b79     SUBWFB    0x79,0x1,0x1                                                                                    
00023e   0100     MOVLB     0x0                                                                                             
000240   5178     MOVF      0x78,0x0,0x1                                                                                    
000242   1179     IORWF     0x79,0x0,0x1                                                                                    
000244   e001     BZ        0x248                                                                                           
000246   d7f7     BRA       0x236                                                                                           
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000248   00ff     RESET                                    Reset();                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00024a   d001     BRA       0x24e                          break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /*                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       case UPDATE_LED:                                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           if(dataPacket.led_num == 3)                                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           {                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                               mLED_3 = dataPacket.led_status;                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                               counter = 0x01;                                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           }//end if                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           if(dataPacket.led_num == 4)                                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           {                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                               mLED_4 = dataPacket.led_status;                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                               counter = 0x01;                                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           }//end if                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           */                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       default:                                                             C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00024c   d000     BRA       0x24e                          break;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   }//end switch()                                                          C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00024e   0100     MOVLB     0x0                    trf_state = SENDING_RESP;                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000250   0e01     MOVLW     0x1                                                                                             
000252   6f77     MOVWF     0x77,0x1                                                                                        
000254   0100     MOVLB     0x0                    if(counter != 0)                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000256   5175     MOVF      0x75,0x0,0x1                                                                                    
000258   e00a     BZ        0x26e                                                                                           
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00025a   c075     MOVFF     0x75,0x40d                 BOOT_BD_IN.Cnt = counter;                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00025c   f40d                                                                                                               
00025e   0e40     MOVLW     0x40                       mUSBBufferReady(BOOT_BD_IN);                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
000260   0104     MOVLB     0x4                                                                                             
000262   170c     ANDWF     0xc,0x1,0x1                                                                                     
000264   0104     MOVLB     0x4                                                                                             
000266   7d0c     BTG       0xc,0x6,0x1                                                                                     
000268   0e88     MOVLW     0x88                                                                                            
00026a   0104     MOVLB     0x4                                                                                             
00026c   130c     IORWF     0xc,0x1,0x1                                                                                     
                                                   }//end if                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               }//end if                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
00026e   0012     RETURN    0x0            }//end BootService                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Function:        void BlinkUSBStatus(void)                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Overview:        BlinkUSBStatus turns on and off LEDs corresponding to        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                  the USB device state.                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            * Note:            mLED macros can be found in io_cfg.h                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                  usb_device_state is declared in usbmmap.c and is modified    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *                  in usbdrv.c, usbctrltrf.c, and usb9.c                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /*void BlinkUSBStatus(void)                                                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               static word led_count=0;                                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               if(led_count == 0)led_count = 20000U;                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               led_count--;                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               #define mLED_Both_Off()         {mLED_1_Off();mLED_2_Off();}                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               #define mLED_Both_On()          {mLED_1_On();mLED_2_On();}                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               #define mLED_Only_1_On()        {mLED_1_On();mLED_2_Off();}                  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               #define mLED_Only_2_On()        {mLED_1_Off();mLED_2_On();}                  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               if(UCONbits.SUSPND == 1)                                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   if(led_count==0)                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       mLED_1_Toggle();                                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       mLED_2 = mLED_1;        // Both blink at the same time               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   }//end if                                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               }                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               else                                                                         C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   if(usb_device_state == DETACHED_STATE)                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       mLED_Both_Off();                                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   }                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   else if(usb_device_state == ATTACHED_STATE)                              C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       mLED_Both_On();                                                      C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   }                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   else if(usb_device_state == POWERED_STATE)                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       mLED_Only_1_On();                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   }                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   else if(usb_device_state == DEFAULT_STATE)                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       mLED_Only_2_On();                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   }                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   else if(usb_device_state == ADDRESS_STATE)                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       if(led_count == 0)                                                   C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       {                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           mLED_1_Toggle();                                                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           mLED_2_Off();                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       }//end if                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   }                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   else if(usb_device_state == CONFIGURED_STATE)                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       if(led_count==0)                                                     C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       {                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           mLED_1_Toggle();                                                 C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                           mLED_2 = !mLED_1;       // Alternate blink                       C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                       }//end if                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                   }//end if(...)                                                           C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                               }//end if(UCONbits.SUSPND...)                                                C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           }//end BlinkUSBStatus                                                            C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           */                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /** EOF boot.c ***************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\boot.c
                                           /*********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * FileName:        usb9.c                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Dependencies:    See INCLUDES section below                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Processor:       PIC18                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Compiler:        C18 2.30.01+                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Company:         Microchip Technology, Inc.                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Software License Agreement                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * civil liability for the breach of the terms and conditions of this            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * license.                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Author               Date        Comment                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Rawin Rojvanit       11/19/04     Original.                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            ********************************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * -usb9.c-                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * This main function in this file, USBCheckStdRequest() is called from the      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * usbctrltrf.c to check if a standard USB request has been received or not.     C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * This is a mini-version of the actual usb9.c from the Microchip USB library.   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Many functions are commented out to make the whole bootload application fit   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * under 2KB, which is the size of the boot block.                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /** I N C L U D E S **********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           #include "c_micrdef.h"                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           #include "typedefs.h"                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           #include "usb.h"                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           #include "io_cfg.h"                     // Required for self_power status        C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /** V A R I A B L E S ********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           #pragma udata                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           void USBStdGetDscHandler(void);                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           void USBStdSetCfgHandler(void);                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           void USBStdGetStatusHandler(void);                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           void USBStdFeatureReqHandler(void);                                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           #pragma code	USBBOOT                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Function:        void USBCheckStdRequest(void)                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Overview:        This routine checks the setup data packet to see if it       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                  knows how to handle it                                       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           void USBCheckStdRequest(void)                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002c2   0104     MOVLB     0x4                if(SetupPkt.RequestType != STANDARD) return;                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002c4   5110     MOVF      0x10,0x0,0x1                                                                                    
0002c6   0b60     ANDLW     0x60                                                                                            
0002c8   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
0002ca   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
0002cc   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
0002ce   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
0002d0   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
0002d2   0900     IORLW     0x0                                                                                             
0002d4   e001     BZ        0x2d8                                                                                           
0002d6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002d8   5111     MOVF      0x11,0x0,0x1       switch(SetupPkt.bRequest)                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002da   0a08     XORLW     0x8                                                                                             
0002dc   e039     BZ        0x350                                                                                           
0002de   0a01     XORLW     0x1                                                                                             
0002e0   e035     BZ        0x34c                                                                                           
0002e2   0a0f     XORLW     0xf                                                                                             
0002e4   e00a     BZ        0x2fa                                                                                           
0002e6   0a03     XORLW     0x3                                                                                             
0002e8   e001     BZ        0x2ec                                                                                           
0002ea   0012     RETURN    0x0                                                                                             
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   case SET_ADR:                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002ec   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002ee   0e01     MOVLW     0x1                                                                                             
0002f0   6f61     MOVWF     0x61,0x1                                                                                        
0002f2   0100     MOVLB     0x0                        usb_device_state = ADR_PENDING_STATE;       // Update state only     C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002f4   0e04     MOVLW     0x4                                                                                             
0002f6   6f7a     MOVWF     0x7a,0x1                                                                                        
                                                       /* See USBCtrlTrfInHandler() in usbctrltrf.c for the next step */    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002f8   0012     RETURN    0x0                        break;                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   case GET_DSC:                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002fa   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
0002fc   0e01     MOVLW     0x1                                                                                             
0002fe   6f61     MOVWF     0x61,0x1                                                                                        
000300   0104     MOVLB     0x4                        if(SetupPkt.bDscType == DSC_DEV)                                     C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000302   0513     DECF      0x13,0x0,0x1                                                                                    
000304   e107     BNZ       0x314                                                                                           
                                                       {                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000306   0100     MOVLB     0x0                            pSrc.bRom = (rom byte*)&device_dsc;                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000308   0eb4     MOVLW     0xb4                                                                                            
00030a   6f62     MOVWF     0x62,0x1                                                                                        
00030c   0e06     MOVLW     0x6                                                                                             
00030e   6f63     MOVWF     0x63,0x1                                                                                        
000310   0e12     MOVLW     0x12                           wCount._word = sizeof(device_dsc);  // Set data count            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                       }                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000312   d013     BRA       0x33a                      else if(SetupPkt.bDscType == DSC_CFG)                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000314   0e02     MOVLW     0x2                                                                                             
000316   5d13     SUBWF     0x13,0x0,0x1                                                                                    
000318   e107     BNZ       0x328                                                                                           
                                                       {                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00031a   0100     MOVLB     0x0                            pSrc.bRom = (rom byte*)&cfg01;                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00031c   0ec6     MOVLW     0xc6                                                                                            
00031e   6f62     MOVWF     0x62,0x1                                                                                        
000320   0e06     MOVLW     0x6                                                                                             
000322   6f63     MOVWF     0x63,0x1                                                                                        
000324   0e20     MOVLW     0x20                           wCount._word = sizeof(cfg01);       // Set data count            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                       }                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000326   d009     BRA       0x33a                      else if(SetupPkt.bDscType == DSC_STR)                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000328   0e03     MOVLW     0x3                                                                                             
00032a   5d13     SUBWF     0x13,0x0,0x1                                                                                    
00032c   e10a     BNZ       0x342                                                                                           
                                                       {                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00032e   0100     MOVLB     0x0                            pSrc.bRom = (rom byte*)&sd000;                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000330   0ee6     MOVLW     0xe6                                                                                            
000332   6f62     MOVWF     0x62,0x1                                                                                        
000334   0e06     MOVLW     0x6                                                                                             
000336   6f63     MOVWF     0x63,0x1                                                                                        
000338   0e04     MOVLW     0x4                            wCount._word = sizeof(sd000);       // Set data count            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00033a   0100     MOVLB     0x0                                                                                             
00033c   6f66     MOVWF     0x66,0x1                                                                                        
00033e   6b67     CLRF      0x67,0x1                                                                                        
                                                       }                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000340   d002     BRA       0x346                      else                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                           /*                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                            * This is required to stall the DEVICE_QUALIFIER request        C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                            */                                                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000342   0100     MOVLB     0x0                            ctrl_trf_session_owner = MUID_NULL;                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000344   6b61     CLRF      0x61,0x1                                                                                        
000346   0100     MOVLB     0x0                        usb_stat.ctrl_trf_mem = _ROM;               // Set memory type       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000348   837b     BSF       0x7b,0x1,0x1                                                                                    
00034a   0012     RETURN    0x0                        break;                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   case SET_CFG:                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00034c   efb6     GOTO      0x36c                      USBStdSetCfgHandler();                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00034e   f001                                                                                                               
                                                       break;                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   case GET_CFG:                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000350   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000352   0e01     MOVLW     0x1                                                                                             
000354   6f61     MOVWF     0x61,0x1                                                                                        
000356   0100     MOVLB     0x0                        pSrc.bRam = (byte*)&usb_active_cfg;         // Set Source            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000358   0e7c     MOVLW     0x7c                                                                                            
00035a   6f62     MOVWF     0x62,0x1                                                                                        
00035c   0e00     MOVLW     0x0                                                                                             
00035e   6f63     MOVWF     0x63,0x1                                                                                        
000360   0100     MOVLB     0x0                        usb_stat.ctrl_trf_mem = _RAM;               // Set memory type       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000362   937b     BCF       0x7b,0x1,0x1                                                                                    
000364   0100     MOVLB     0x0                        LSB(wCount) = 1;                            // Set data count        C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000366   0e01     MOVLW     0x1                                                                                             
000368   6f66     MOVWF     0x66,0x1                                                                                        
00036a   0012     RETURN    0x0                        break;                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //case GET_STATUS:                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    USBStdGetStatusHandler();                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    break;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //case CLR_FEATURE:                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //case SET_FEATURE:                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    USBStdFeatureReqHandler();                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    break;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //case GET_INTF:                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    ctrl_trf_session_owner = MUID_USB9;                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    pSrc.bRam = (byte*)&usb_alt_intf+SetupPkt.bIntfID;  // Set source  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    usb_stat.ctrl_trf_mem = _RAM;               // Set memory type     C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    LSB(wCount) = 1;                            // Set data count      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    break;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //case SET_INTF:                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    ctrl_trf_session_owner = MUID_USB9;                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    usb_alt_intf[SetupPkt.bIntfID] = SetupPkt.bAltID;                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //    break;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //case SET_DSC:                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   //case SYNCH_FRAME:                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   default:                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                       break;                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                               }//end switch                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           }//end USBCheckStdRequest                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Function:        void USBStdGetDscHandler(void)                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Overview:        This routine handles the standard GET_DESCRIPTOR request.    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                  It utilizes tables dynamically looks up descriptor size.     C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                  This routine should never have to be modified if the tables  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                  in usbdsc.c are declared correctly.                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //void USBStdGetDscHandler(void)                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //{                                                                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    if(SetupPkt.bmRequestType == 0x80)                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    {                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        switch(SetupPkt.bDscType)                                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        {                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            case DSC_DEV:                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                ctrl_trf_session_owner = MUID_USB9;                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                pSrc.bRom = (rom byte*)&device_dsc;                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                wCount._word = sizeof(device_dsc);          // Set data count  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                break;                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            case DSC_CFG:                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                ctrl_trf_session_owner = MUID_USB9;                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                wCount._word = *(pSrc.wRom+1);              // Set data count  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                break;                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            case DSC_STR:                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                ctrl_trf_session_owner = MUID_USB9;                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                wCount._word = *pSrc.bRom;                  // Set data count  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                break;                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        }//end switch                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        usb_stat.ctrl_trf_mem = _ROM;                       // Set memory type C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    }//end if                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //}//end USBStdGetDscHandler                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Function:        void USBStdSetCfgHandler(void)                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Overview:        This routine first disables all endpoints by clearing        C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                  UEP registers. It then configures (initializes) endpoints    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                  specified in the modifiable section.                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           void USBStdSetCfgHandler(void)                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00036c   0100     MOVLB     0x0                ctrl_trf_session_owner = MUID_USB9;                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00036e   0e01     MOVLW     0x1                                                                                             
000370   6f61     MOVWF     0x61,0x1                                                                                        
                                               //mDisableEP1to15();                          // See usbdrv.h                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                               //ClearArray((byte*)&usb_alt_intf,MAX_NUM_INT);                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000372   c412     MOVFF     0x412,0x7c         usb_active_cfg = SetupPkt.bCfgValue;                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000374   f07c                                                                                                               
000376   0104     MOVLB     0x4                if(SetupPkt.bCfgValue == 0)                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000378   5112     MOVF      0x12,0x0,0x1                                                                                    
00037a   e104     BNZ       0x384                                                                                           
00037c   0100     MOVLB     0x0                    usb_device_state = ADDRESS_STATE;                                        C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00037e   0e05     MOVLW     0x5                                                                                             
000380   6f7a     MOVWF     0x7a,0x1                                                                                        
000382   0012     RETURN    0x0                else                                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000384   0100     MOVLB     0x0                    usb_device_state = CONFIGURED_STATE;                                     C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
000386   0e06     MOVLW     0x6                                                                                             
000388   6f7a     MOVWF     0x7a,0x1                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   /* Modifiable Section */                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00038a   ef2e     GOTO      0x5c                   BootInitEP();                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
00038c   f000                                                                                                               
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                   /* End modifiable section */                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                               }//end if(SetupPkt.bcfgValue == 0)                                           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           }//end USBStdSetCfgHandler                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Function:        void USBStdGetStatusHandler(void)                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Overview:        This routine handles the standard GET_STATUS request         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //void USBStdGetStatusHandler(void)                                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //{                                                                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    CtrlTrfData._byte0 = 0;                         // Initialize content      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    CtrlTrfData._byte1 = 0;                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    switch(SetupPkt.Recipient)                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    {                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        case RCPT_DEV:                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            ctrl_trf_session_owner = MUID_USB9;                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            /*                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //             * _byte0: bit0: Self-Powered Status [0] Bus-Powered [1] Self-Powered C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //             *         bit1: RemoteWakeup        [0] Disabled    [1] Enabled   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //             */                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            if(self_power == 1)                     // self_power defined in io_cfg.h C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                CtrlTrfData._byte0|=0b000000001;    // Set bit0                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            if(usb_stat.RemoteWakeup == 1)          // usb_stat defined in usbmmap.c C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                CtrlTrfData._byte0|=0b00000010;     // Set bit1                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            break;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        case RCPT_INTF:                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            ctrl_trf_session_owner = MUID_USB9;     // No data to update       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            break;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        case RCPT_EP:                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            ctrl_trf_session_owner = MUID_USB9;                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            /*                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //             * _byte0: bit0: Halt Status [0] Not Halted [1] Halted             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //             */                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            if(*pDst.bRam & _BSTALL)    // Use _BSTALL as a bit mask           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                CtrlTrfData._byte0=0x01;// Set bit0                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            break;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    }//end switch                                                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    if(ctrl_trf_session_owner == MUID_USB9)                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    {                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        pSrc.bRam = (byte*)&CtrlTrfData;            // Set Source              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        usb_stat.ctrl_trf_mem = _RAM;               // Set memory type         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        LSB(wCount) = 2;                            // Set data count          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    }//end if(...)                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //}//end USBStdGetStatusHandler                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Function:        void USBStdFeatureReqHandler(void)                           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Overview:        This routine handles the standard SET & CLEAR FEATURES       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                  requests                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //void USBStdFeatureReqHandler(void)                                             C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //{                                                                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    if((SetupPkt.bFeature == DEVICE_REMOTE_WAKEUP)&&                           C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //       (SetupPkt.Recipient == RCPT_DEV))                                       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    {                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        ctrl_trf_session_owner = MUID_USB9;                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        if(SetupPkt.bRequest == SET_FEATURE)                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            usb_stat.RemoteWakeup = 1;                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        else                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            usb_stat.RemoteWakeup = 0;                                         C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    }//end if                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    if((SetupPkt.bFeature == ENDPOINT_HALT)&&                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //       (SetupPkt.Recipient == RCPT_EP)&&                                       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //       (SetupPkt.EPNum != 0))                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    {                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        ctrl_trf_session_owner = MUID_USB9;                                    C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        /* Must do address calculation here */                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);       C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        if(SetupPkt.bRequest == SET_FEATURE)                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            *pDst.bRam = _USIE|_BSTALL;                                        C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        else                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        {                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            if(SetupPkt.EPDir == 1) // IN                                      C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                *pDst.bRam = _UCPU;                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //            else                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //                *pDst.bRam = _USIE|_DAT0|_DTSEN;                               C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //        }//end if                                                              C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //    }//end if                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           //}//end USBStdFeatureReqHandler                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /** EOF usb9.c ***************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usb9.c
                                           /*********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * FileName:        usbctrltrf.c                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Dependencies:    See INCLUDES section below                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Processor:       PIC18                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Compiler:        C18 2.30.01+                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Company:         Microchip Technology, Inc.                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Software License Agreement                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * civil liability for the breach of the terms and conditions of this            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * license.                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Author               Date        Comment                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            ********************************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * -usbctrltrf.c-                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * This file contains functions which handle the Control Transfer mechanism.     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * The only function that is of interest to an end user is the                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * USBCtrlTrfSetupHandler(), which has a section that calls different            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * USB request handlers. A default call to the USBCheckStdRequest always         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * exist and cannot be removed. USBCheckStdRequest contains handlers             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * for the requests specified in chapter 9 of the USB specification.             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * If a request cannot be serviced by USBCheckStdRequest, then it means the      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * request is a class specific request. All device class request handlers        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * in a project should be called from USBCtrlTrfSetupHandler().                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * If no handlers in the project know how to service a request, then the         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * ctrl_trf_session_owner variable would still have the value of MUID_NULL.      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * The MUID_NULL value would cause the USBCtrlEPServiceComplete() to stall       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * the control endpoint, effectively telling the USB host that the               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * request cannot be serviced.                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * This is a mini-version of the actual usbctrltrf.c from the Microchip USB      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Library. Some functions were optimized to handle byte only operation instead  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * of supporting both byte and word operations.                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * This helps to decrease the the bootload application size to fit               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * under 2KB, which is the size of the boot block.                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /** I N C L U D E S **********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           #include "c_micrdef.h"                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           #include "typedefs.h"                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           #include "usb.h"                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /** V A R I A B L E S ********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           #pragma udata                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           byte ctrl_trf_state;                // Control Transfer State                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           byte ctrl_trf_session_owner;        // Current transfer session owner            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           POINTER pSrc;                       // Data source pointer                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           POINTER pDst;                       // Data destination pointer                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           WORD wCount;                        // Data counter                              C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlTrfSetupHandler(void);                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlTrfOutHandler(void);                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlTrfInHandler(void);                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           #pragma code	USBBOOT                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Function:        void USBCtrlEPService(void)                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * PreCondition:    USTAT is loaded with a valid endpoint address.               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Overview:        USBCtrlEPService checks for three transaction types that     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  it knows how to service and services them:                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  1. EP0 SETUP                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  2. EP0 OUT                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  3. EP0 IN                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  It ignores all other types (i.e. EP1, EP2, etc.)             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlEPService(void)                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00038e   506c     MOVF      0x6c,0x0,0x0       if(USTAT == EP00_OUT)                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000390   e002     BZ        0x396                                                                                           
000392   0e00     MOVLW     0x0                                                                                             
000394   d001     BRA       0x398                                                                                           
000396   0e01     MOVLW     0x1                                                                                             
000398   0900     IORLW     0x0                                                                                             
00039a   e00b     BZ        0x3b2                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00039c   0104     MOVLB     0x4                    if(ep0Bo.Stat.PID == SETUP_TOKEN)           // EP0 SETUP                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00039e   5100     MOVF      0x0,0x0,0x1                                                                                     
0003a0   0b3c     ANDLW     0x3c                                                                                            
0003a2   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
0003a4   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
0003a6   080d     SUBLW     0xd                                                                                             
0003a8   e102     BNZ       0x3ae                                                                                           
0003aa   efe2     GOTO      0x3c4                      USBCtrlTrfSetupHandler();                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003ac   f001                                                                                                               
                                                   else                                        // EP0 OUT                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003ae   efeb     GOTO      0x3d6                      USBCtrlTrfOutHandler();                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003b0   f001                                                                                                               
                                               }                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003b2   506c     MOVF      0x6c,0x0,0x0       else if(USTAT == EP00_IN)                       // EP0 IN                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003b4   e002     BZ        0x3ba                                                                                           
0003b6   0e00     MOVLW     0x0                                                                                             
0003b8   d001     BRA       0x3bc                                                                                           
0003ba   0e01     MOVLW     0x1                                                                                             
0003bc   0904     IORLW     0x4                                                                                             
0003be   e001     BZ        0x3c2                                                                                           
0003c0   d819     RCALL     0x3f4                  USBCtrlTrfInHandler();                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003c2   0012     RETURN    0x0            }//end USBCtrlEPService                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Function:        void USBCtrlTrfSetupHandler(void)                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * PreCondition:    SetupPkt buffer is loaded with valid USB Setup Data          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Overview:        This routine is a task dispatcher and has 3 stages.          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  1. It initializes the control transfer state machine.        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  2. It calls on each of the module that may know how to       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     service the Setup Request from the host.                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     Module Example: USB9, HID, CDC, MSD, ...                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     As new classes are added, ClassReqHandler table in        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     usbdsc.c should be updated to call all available          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     class handlers.                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  3. Once each of the modules has had a chance to check if     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     it is responsible for servicing the request, stage 3      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     then checks direction of the transfer to determine how    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     to prepare EP0 for the control transfer.                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     Refer to USBCtrlEPServiceComplete() for more details.     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Note:            Microchip USB Firmware has three different states for        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  the control transfer state machine:                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  1. WAIT_SETUP                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  2. CTRL_TRF_TX                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  3. CTRL_TRF_RX                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  Refer to firmware manual to find out how one state           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  is transitioned to another.                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  A Control Transfer is composed of many USB transactions.     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  When transferring data over multiple transactions,           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  it is important to keep track of data source, data           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  destination, and data count. These three parameters are      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  stored in pSrc,pDst, and wCount. A flag is used to           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  note if the data source is from ROM or RAM.                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlTrfSetupHandler(void)                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               byte i;                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /* Stage 1 */                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003c4   0100     MOVLB     0x0                ctrl_trf_state = WAIT_SETUP;                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003c6   6b60     CLRF      0x60,0x1                                                                                        
0003c8   6b61     CLRF      0x61,0x1           ctrl_trf_session_owner = MUID_NULL;     // Set owner to NULL                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003ca   6b66     CLRF      0x66,0x1           wCount._word = 0;                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003cc   6b67     CLRF      0x67,0x1                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /* Stage 2 */                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003ce   ec61     CALL      0x2c2,0x0          USBCheckStdRequest();                   // See system\usb9\usb9.c            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003d0   f001                                                                                                               
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /* Modifiable Section */                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /* Insert other USB Device Class Request Handlers here */                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /* End Modifiable Section */                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /* Stage 3 */                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003d2   ef6d     GOTO      0x4da              USBCtrlEPServiceComplete();                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003d4   f002                                                                                                               
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           }//end USBCtrlTrfSetupHandler                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Function:        void USBCtrlTrfOutHandler(void)                              C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Overview:        This routine handles an OUT transaction according to         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  which control transfer state is currently active.            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Note:            Note that if the the control transfer was from               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  host to device, the session owner should be notified         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  at the end of each OUT transaction to service the            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  received data.                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlTrfOutHandler(void)                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003d6   0e02     MOVLW     0x2                if(ctrl_trf_state == CTRL_TRF_RX)                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003d8   0100     MOVLB     0x0                                                                                             
0003da   5d60     SUBWF     0x60,0x0,0x1                                                                                    
0003dc   e109     BNZ       0x3f0                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003de   d85c     RCALL     0x498                  USBCtrlTrfRxService();                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                   /*                                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                    * Don't have to worry about overwriting _KEEP bit                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                    * because if _KEEP was set, TRNIF would not have been                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                    * generated in the first place.                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                    */                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003e0   0104     MOVLB     0x4                    if(ep0Bo.Stat.DTS == 0)                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003e2   bd00     BTFSC     0x0,0x6,0x1                                                                                     
0003e4   d002     BRA       0x3ea                                                                                           
0003e6   0ec8     MOVLW     0xc8                       ep0Bo.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003e8   d001     BRA       0x3ec                  else                                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003ea   0e88     MOVLW     0x88                       ep0Bo.Stat._byte = _USIE|_DAT0|_DTSEN;                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003ec   6f00     MOVWF     0x0,0x1                                                                                         
                                               }                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003ee   0012     RETURN    0x0                else    // CTRL_TRF_TX                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003f0   efa6     GOTO      0x54c                  USBPrepareForNextSetupTrf();                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003f2   f002                                                                                                               
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           }//end USBCtrlTrfOutHandler                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Function:        void USBCtrlTrfInHandler(void)                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Overview:        This routine handles an IN transaction according to          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  which control transfer state is currently active.            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Note:            A Set Address Request must not change the acutal address     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  of the device until the completion of the control            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  transfer. The end of the control transfer for Set Address    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  Request is an IN transaction. Therefore it is necessary      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  to service this unique situation when the condition is       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  right. Macro mUSBCheckAdrPendingState is defined in          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  usb9.h and its function is to specifically service this      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  event.                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlTrfInHandler(void)                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003f4   0e04     MOVLW     0x4                mUSBCheckAdrPendingState();         // Must check if in ADR_PENDING_STATE    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0003f6   0100     MOVLB     0x0                                                                                             
0003f8   5d7a     SUBWF     0x7a,0x0,0x1                                                                                    
0003fa   e109     BNZ       0x40e                                                                                           
0003fc   c412     MOVFF     0x412,0xf6e                                                                                     
0003fe   ff6e                                                                                                               
000400   506e     MOVF      0x6e,0x0,0x0                                                                                    
000402   0800     SUBLW     0x0                                                                                             
000404   e202     BC        0x40a                                                                                           
000406   0e05     MOVLW     0x5                                                                                             
000408   d001     BRA       0x40c                                                                                           
00040a   0e03     MOVLW     0x3                                                                                             
00040c   6f7a     MOVWF     0x7a,0x1                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00040e   0100     MOVLB     0x0                if(ctrl_trf_state == CTRL_TRF_TX)                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000410   0560     DECF      0x60,0x0,0x1                                                                                    
000412   e109     BNZ       0x426                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000414   d80a     RCALL     0x42a                  USBCtrlTrfTxService();                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000416   0104     MOVLB     0x4                    if(ep0Bi.Stat.DTS == 0)                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000418   bd04     BTFSC     0x4,0x6,0x1                                                                                     
00041a   d002     BRA       0x420                                                                                           
00041c   0ec8     MOVLW     0xc8                       ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00041e   d001     BRA       0x422                  else                                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000420   0e88     MOVLW     0x88                       ep0Bi.Stat._byte = _USIE|_DAT0|_DTSEN;                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000422   6f04     MOVWF     0x4,0x1                                                                                         
                                               }                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000424   0012     RETURN    0x0                else // CTRL_TRF_RX                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000426   efa6     GOTO      0x54c                  USBPrepareForNextSetupTrf();                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000428   f002                                                                                                               
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           }//end USBCtrlTrfInHandler                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Function:        void USBCtrlTrfTxService(void)                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * PreCondition:    pSrc, wCount, and usb_stat.ctrl_trf_mem are setup properly.  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Overview:        This routine should be called from only two places.          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  One from USBCtrlEPServiceComplete() and one from             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  USBCtrlTrfInHandler(). It takes care of managing a           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  transfer over multiple USB transactions.                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Note:            This routine works with isochronous endpoint larger than     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  256 bytes and is shown here as an example of how to deal     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  with BC9 and BC8. In reality, a control endpoint can never   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  be larger than 64 bytes.                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlTrfTxService(void)                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               byte byte_to_send;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                * First, have to figure out how many byte of data to send.                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00042a   0100     MOVLB     0x0                if(wCount._word < EP0_BUFF_SIZE)                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00042c   0e08     MOVLW     0x8                                                                                             
00042e   5d66     SUBWF     0x66,0x0,0x1                                                                                    
000430   0e00     MOVLW     0x0                                                                                             
000432   5967     SUBWFB    0x67,0x0,0x1                                                                                    
000434   e203     BC        0x43c                                                                                           
000436   c066     MOVFF     0x66,0x69              byte_to_send = wCount._word;                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000438   f069                                                                                                               
00043a   d002     BRA       0x440              else                                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00043c   0e08     MOVLW     0x8                    byte_to_send = EP0_BUFF_SIZE;                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00043e   6f69     MOVWF     0x69,0x1                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000440   c069     MOVFF     0x69,0x405         ep0Bi.Cnt = byte_to_send;                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000442   f405                                                                                                               
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                * Subtract the number of bytes just about to be sent from the total.        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000444   5169     MOVF      0x69,0x0,0x1       wCount._word -= byte_to_send;                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000446   6e00     MOVWF     0x0,0x0                                                                                         
000448   6a01     CLRF      0x1,0x0                                                                                         
00044a   5000     MOVF      0x0,0x0,0x0                                                                                     
00044c   5f66     SUBWF     0x66,0x1,0x1                                                                                    
00044e   5001     MOVF      0x1,0x0,0x0                                                                                     
000450   5b67     SUBWFB    0x67,0x1,0x1                                                                                    
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000452   0e18     MOVLW     0x18               pDst.bRam = (byte*)&CtrlTrfData;        // Set destination pointer           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000454   6f64     MOVWF     0x64,0x1                                                                                        
000456   0e04     MOVLW     0x4                                                                                             
000458   6f65     MOVWF     0x65,0x1                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00045a   5169     MOVF      0x69,0x0,0x1       while(byte_to_send)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00045c   e01c     BZ        0x496                                                                                           
000494   d7e2     BRA       0x45a                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00045e   0100     MOVLB     0x0                    if(usb_stat.ctrl_trf_mem == _ROM)                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000460   a37b     BTFSS     0x7b,0x1,0x1                                                                                    
000462   d007     BRA       0x472                                                                                           
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000464   c062     MOVFF     0x62,0xff6                 *pDst.bRam = *pSrc.bRom;                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000466   fff6                                                                                                               
000468   c063     MOVFF     0x63,0xff7                                                                                      
00046a   fff7                                                                                                               
00046c   0008     TBLRD                                                                                                     
00046e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                       pSrc.bRom++;                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                   }                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000470   d005     BRA       0x47c                  else                                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000472   c062     MOVFF     0x62,0xfe9                 *pDst.bRam = *pSrc.bRam;                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000474   ffe9                                                                                                               
000476   c063     MOVFF     0x63,0xfea                                                                                      
000478   ffea                                                                                                               
00047a   50ef     MOVF      0xef,0x0,0x0                                                                                    
00047c   c064     MOVFF     0x64,0xfe9                                                                                      
00047e   ffe9                                                                                                               
000480   c065     MOVFF     0x65,0xfea                                                                                      
000482   ffea                                                                                                               
000484   6eef     MOVWF     0xef,0x0                                                                                        
000486   0100     MOVLB     0x0                        pSrc.bRam++;                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000488   2b62     INCF      0x62,0x1,0x1                                                                                    
00048a   0e00     MOVLW     0x0                                                                                             
00048c   2363     ADDWFC    0x63,0x1,0x1                                                                                    
                                                   }//end if else                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00048e   2b64     INCF      0x64,0x1,0x1           pDst.bRam++;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000490   2365     ADDWFC    0x65,0x1,0x1                                                                                    
000492   0769     DECF      0x69,0x1,0x1           byte_to_send--;                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               }//end while                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000496   0012     RETURN    0x0            }//end USBCtrlTrfTxService                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Function:        void USBCtrlTrfRxService(void)                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * PreCondition:    pDst and wCount are setup properly.                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  pSrc is always &CtrlTrfData                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  usb_stat.ctrl_trf_mem is always _RAM.                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  wCount should be set to 0 at the start of each control       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  transfer.                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Overview:        *** This routine is only partially complete. Check for       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  new version of the firmware.                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlTrfRxService(void)                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               byte byte_to_read;                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000498   c401     MOVFF     0x401,0x6a         byte_to_read = ep0Bo.Cnt;                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00049a   f06a                                                                                                               
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                * Accumulate total number of bytes read                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00049c   0100     MOVLB     0x0                wCount._word = wCount._word + byte_to_read;                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00049e   516a     MOVF      0x6a,0x0,0x1                                                                                    
0004a0   2566     ADDWF     0x66,0x0,0x1                                                                                    
0004a2   6f66     MOVWF     0x66,0x1                                                                                        
0004a4   0e00     MOVLW     0x0                                                                                             
0004a6   2167     ADDWFC    0x67,0x0,0x1                                                                                    
0004a8   6f67     MOVWF     0x67,0x1                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004aa   0e18     MOVLW     0x18               pSrc.bRam = (byte*)&CtrlTrfData;                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004ac   6f62     MOVWF     0x62,0x1                                                                                        
0004ae   0e04     MOVLW     0x4                                                                                             
0004b0   6f63     MOVWF     0x63,0x1                                                                                        
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004b2   516a     MOVF      0x6a,0x0,0x1       while(byte_to_read)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004b4   e011     BZ        0x4d8                                                                                           
0004d6   d7ed     BRA       0x4b2                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004b6   c062     MOVFF     0x62,0xfe9             *pDst.bRam = *pSrc.bRam;                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004b8   ffe9                                                                                                               
0004ba   c063     MOVFF     0x63,0xfea                                                                                      
0004bc   ffea                                                                                                               
0004be   50ef     MOVF      0xef,0x0,0x0                                                                                    
0004c0   c064     MOVFF     0x64,0xfe9                                                                                      
0004c2   ffe9                                                                                                               
0004c4   c065     MOVFF     0x65,0xfea                                                                                      
0004c6   ffea                                                                                                               
0004c8   6eef     MOVWF     0xef,0x0                                                                                        
0004ca   2b64     INCF      0x64,0x1,0x1           pDst.bRam++;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004cc   0e00     MOVLW     0x0                                                                                             
0004ce   2365     ADDWFC    0x65,0x1,0x1                                                                                    
0004d0   2b62     INCF      0x62,0x1,0x1           pSrc.bRam++;                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004d2   2363     ADDWFC    0x63,0x1,0x1                                                                                    
0004d4   076a     DECF      0x6a,0x1,0x1           byte_to_read--;                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               }//end while(byte_to_read)                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004d8   0012     RETURN    0x0            }//end USBCtrlTrfRxService                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Function:        void USBCtrlEPServiceComplete(void)                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Overview:        This routine wrap up the ramaining tasks in servicing        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  a Setup Request. Its main task is to set the endpoint        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  controls appropriately for a given situation. See code       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  below.                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  There are three main scenarios:                              C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  a) There was no handler for the Request, in this case        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     a STALL should be sent out.                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  b) The host has requested a read control transfer,           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     endpoints are required to be setup in a specific way.     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  c) The host has requested a write control transfer, or       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     a control data stage is not required, endpoints are       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                     required to be setup in a specific way.                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  Packet processing is resumed by clearing PKTDIS bit.         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBCtrlEPServiceComplete(void)                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004da   0100     MOVLB     0x0                if(ctrl_trf_session_owner == MUID_NULL)                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004dc   5161     MOVF      0x61,0x0,0x1                                                                                    
0004de   e105     BNZ       0x4ea                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                   /*                                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                    * If no one knows how to service this request then stall.               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                    * Must also prepare EP0 to receive the next SETUP transaction.          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                    */                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004e0   d83d     RCALL     0x55c                  ep0Bo.Cnt = EP0_BUFF_SIZE;                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                   ep0Bo.ADR = (byte*)&SetupPkt;                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004e2   0e84     MOVLW     0x84                   ep0Bo.Stat._byte = _USIE|_BSTALL;                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004e4   6f00     MOVWF     0x0,0x1                                                                                         
0004e6   0104     MOVLB     0x4                    ep0Bi.Stat._byte = _USIE|_BSTALL;                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               }                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004e8   d01d     BRA       0x524              else    // A module has claimed ownership of the control transfer session.   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004ea   0104     MOVLB     0x4                    if(SetupPkt.DataDir == DEV_TO_HOST)                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004ec   af10     BTFSS     0x10,0x7,0x1                                                                                    
0004ee   d01c     BRA       0x528                                                                                           
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004f0   0100     MOVLB     0x0                        if(SetupPkt.wLength < wCount._word)                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
0004f2   5166     MOVF      0x66,0x0,0x1                                                                                    
0004f4   0104     MOVLB     0x4                                                                                             
0004f6   5d16     SUBWF     0x16,0x0,0x1                                                                                    
0004f8   0100     MOVLB     0x0                                                                                             
0004fa   5167     MOVF      0x67,0x0,0x1                                                                                    
0004fc   0104     MOVLB     0x4                                                                                             
0004fe   5917     SUBWFB    0x17,0x0,0x1                                                                                    
000500   e204     BC        0x50a                                                                                           
000502   c416     MOVFF     0x416,0x66                     wCount._word = SetupPkt.wLength;                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000504   f066                                                                                                               
000506   c417     MOVFF     0x417,0x67                                                                                      
000508   f067                                                                                                               
00050a   df8f     RCALL     0x42a                      USBCtrlTrfTxService();                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00050c   0100     MOVLB     0x0                        ctrl_trf_state = CTRL_TRF_TX;                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00050e   0e01     MOVLW     0x1                                                                                             
000510   6f60     MOVWF     0x60,0x1                                                                                        
                                                       /*                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * Control Read:                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * <SETUP[0]><IN[1]><IN[0]>...<OUT[1]> | <SETUP[0]>                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * 1. Prepare OUT EP to respond to early termination                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        *                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * NOTE:                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * If something went wrong during the control transfer,              C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * the last status stage may not be sent by the host.                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * When this happens, two different things could happen              C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * depending on the host.                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * a) The host could send out a RESET.                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * b) The host could send out a new SETUP transaction                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        *    without sending a RESET first.                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * To properly handle case (b), the OUT EP must be setup             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * to receive either a zero length OUT transaction, or a             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * new SETUP transaction.                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        *                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * Since the SETUP transaction requires the DTS bit to be            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * DAT0 while the zero length OUT status requires the DTS            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * bit to be DAT1, the DTS bit check by the hardware should          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * be disabled. This way the SIE could accept either of              C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * the two transactions.                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        *                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * Furthermore, the Cnt byte should be set to prepare for            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * the SETUP data (8-byte or more), and the buffer address           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * should be pointed to SetupPkt.                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        */                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000512   d824     RCALL     0x55c                      ep0Bo.Cnt = EP0_BUFF_SIZE;                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                       ep0Bo.ADR = (byte*)&SetupPkt;                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000514   0e80     MOVLW     0x80                       ep0Bo.Stat._byte = _USIE;           // Note: DTSEN is 0!             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000516   6f00     MOVWF     0x0,0x1                                                                                         
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                       /*                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * 2. Prepare IN EP to transfer data, Cnt should have                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        *    been initialized by responsible request owner.                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        */                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000518   0104     MOVLB     0x4                        ep0Bi.ADR = (byte*)&CtrlTrfData;                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00051a   0e18     MOVLW     0x18                                                                                            
00051c   6f06     MOVWF     0x6,0x1                                                                                         
00051e   0e04     MOVLW     0x4                                                                                             
000520   6f07     MOVWF     0x7,0x1                                                                                         
000522   0ec8     MOVLW     0xc8                       ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000524   6f04     MOVWF     0x4,0x1                                                                                         
                                                   }                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000526   d010     BRA       0x548                  else    // (SetupPkt.DataDir == HOST_TO_DEV)                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000528   0100     MOVLB     0x0                        ctrl_trf_state = CTRL_TRF_RX;                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00052a   0e02     MOVLW     0x2                                                                                             
00052c   6f60     MOVWF     0x60,0x1                                                                                        
                                                       /*                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * Control Write:                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * <SETUP[0]><OUT[1]><OUT[0]>...<IN[1]> | <SETUP[0]>                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        *                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * 1. Prepare IN EP to respond to early termination                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        *                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        *    This is the same as a Zero Length Packet Response              C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        *    for control transfer without a data stage                      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        */                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00052e   0104     MOVLB     0x4                        ep0Bi.Cnt = 0;                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000530   6b05     CLRF      0x5,0x1                                                                                         
000532   0ec8     MOVLW     0xc8                       ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000534   6f04     MOVWF     0x4,0x1                                                                                         
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                       /*                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        * 2. Prepare OUT EP to receive data.                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                        */                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000536   0104     MOVLB     0x4                        ep0Bo.Cnt = EP0_BUFF_SIZE;                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000538   0e08     MOVLW     0x8                                                                                             
00053a   6f01     MOVWF     0x1,0x1                                                                                         
00053c   0e18     MOVLW     0x18                       ep0Bo.ADR = (byte*)&CtrlTrfData;                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00053e   6f02     MOVWF     0x2,0x1                                                                                         
000540   0e04     MOVLW     0x4                                                                                             
000542   6f03     MOVWF     0x3,0x1                                                                                         
000544   0ec8     MOVLW     0xc8                       ep0Bo.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000546   6f00     MOVWF     0x0,0x1                                                                                         
                                                   }//end if(SetupPkt.DataDir == DEV_TO_HOST)                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               }//end if(ctrl_trf_session_owner == MUID_NULL)                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                * PKTDIS bit is set when a Setup Transaction is received.                   C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                * Clear to resume packet processing.                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000548   986d     BCF       0x6d,0x4,0x0       UCONbits.PKTDIS = 0;                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00054a   0012     RETURN    0x0            }//end USBCtrlEPServiceComplete                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Function:        void USBPrepareForNextSetupTrf(void)                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Overview:        The routine forces EP0 OUT to be ready for a new Setup       C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                  transaction, and forces EP0 IN to be owned by CPU.           C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           void USBPrepareForNextSetupTrf(void)                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00054c   0100     MOVLB     0x0                ctrl_trf_state = WAIT_SETUP;            // See usbctrltrf.h                  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00054e   6b60     CLRF      0x60,0x1                                                                                        
000550   d805     RCALL     0x55c              ep0Bo.Cnt = EP0_BUFF_SIZE;              // Defined in usbcfg.h               C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
00055c   0104     MOVLB     0x4                                                                                             
00055e   0e08     MOVLW     0x8                                                                                             
000560   6f01     MOVWF     0x1,0x1                                                                                         
000562   0e10     MOVLW     0x10               ep0Bo.ADR = (byte*)&SetupPkt;                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000564   6f02     MOVWF     0x2,0x1                                                                                         
000566   0e04     MOVLW     0x4                                                                                             
000568   6f03     MOVWF     0x3,0x1                                                                                         
00056a   0012     RETURN    0x0                                                                                             
000552   0e88     MOVLW     0x88               ep0Bo.Stat._byte = _USIE|_DAT0|_DTSEN;  // EP0 buff dsc init, see usbmmap.h  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000554   6f00     MOVWF     0x0,0x1                                                                                         
000556   0104     MOVLB     0x4                ep0Bi.Stat._byte = _UCPU;               // EP0 IN buffer initialization      C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
000558   6b04     CLRF      0x4,0x1                                                                                         
00055a   0012     RETURN    0x0            }//end USBPrepareForNextSetupTrf                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /** EOF usbctrltrf.c *********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbctrltrf.c
                                           /*********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                Microchip USB Bootloader Version 1.0                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * FileName:        usbdrv.c                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Dependencies:    See INCLUDES section below                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Processor:       PIC18                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Compiler:        C18 2.30.01+                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Company:         Microchip Technology, Inc.                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Software License Agreement                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * civil liability for the breach of the terms and conditions of this            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * license.                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Author               Date        Comment                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Rawin Rojvanit       11/19/04     Original.                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            ********************************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * -usbdrv.c-                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * This file contains functions that check the hardware interrupts for           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * USB events. The main function, USBDriverService(), should be called once      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * every main loop.                                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * This is a mini-version of the actual usbdrv.c from the Microchip USB          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Library. Many functions were removed to make the whole bootload application   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * fit under 2KB, which is the size of the boot block.                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /** I N C L U D E S **********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           #include "c_micrdef.h"                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           #include "typedefs.h"                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           #include "usb.h"                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           #include "io_cfg.h"             // Required for USBCheckBusStatus()              C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /** V A R I A B L E S ********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           #pragma udata                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBModuleEnable(void);                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBModuleDisable(void);                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBSuspend(void);                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBWakeFromSuspend(void);                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBProtocolResetHandler(void);                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USB_SOF_Handler(void);                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBStallHandler(void);                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBErrorHandler(void);                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           #pragma code	USBBOOT                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Function:        void USBCheckBusStatus(void)                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Overview:        This routine enables/disables the USB module by monitoring   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  the USB power signal.                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBCheckBusStatus(void)                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
00056c   0e08     MOVLW     0x8                UCON = 0b00001000;              // Enable USBEN only                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
00056e   6e6d     MOVWF     0x6d,0x0                                                                                        
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * After enabling the USB module, it takes some time for the voltage         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * on the D+ or D- line to rise high enough to get out of the SE0 condition. C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * The USB Reset interrupt should not be unmasked until the SE0 condition is C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * cleared. This helps preventing the firmware from misinterpreting this     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * unique event as a USB bus reset from the USB host.                        C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000570   ba6d     BTFSC     0x6d,0x5,0x0       while(UCONbits.SE0);            // Blocking loop                             C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000572   d7fe     BRA       0x570                                                                                           
000574   6a68     CLRF      0x68,0x0           UIR = 0;                        // Clear all USB interrupts                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000576   0e11     MOVLW     0x11               UIE = 0b00010001;               // Unmask RESET & IDLE interrupts only       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000578   6e69     MOVWF     0x69,0x0                                                                                        
00057a   0100     MOVLB     0x0                usb_device_state = POWERED_STATE;                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
00057c   0e02     MOVLW     0x2                                                                                             
00057e   6f7a     MOVWF     0x7a,0x1                                                                                        
000580   0012     RETURN    0x0            }//end USBCheckBusStatus                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Function:        void USBDriverService(void)                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * PreCondition:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Side Effects:    None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Overview:        This routine is the heart of this firmware. It manages       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  all USB interrupts.                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Note:            Device state transitions through the following stages:       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  DETACHED -> ATTACHED -> POWERED -> DEFAULT ->                C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  ADDRESS_PENDING -> ADDRESSED -> CONFIGURED -> READY          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBDriverService(void)                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * Task A: Service USB Activity Interrupt                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000582   5068     MOVF      0x68,0x0,0x0       if(UIRbits.ACTVIF && UIEbits.ACTVIE)                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000584   0b04     ANDLW     0x4                                                                                             
000586   e006     BZ        0x594                                                                                           
000588   5069     MOVF      0x69,0x0,0x0                                                                                    
00058a   0b04     ANDLW     0x4                                                                                             
00058c   e003     BZ        0x594                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
00058e   926d     BCF       0x6d,0x1,0x0           UCONbits.SUSPND = 0;                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000590   9469     BCF       0x69,0x2,0x0           UIEbits.ACTVIE = 0;                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000592   9468     BCF       0x68,0x2,0x0           UIRbits.ACTVIF = 0;                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                               }//end if                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * Task B: Service USB Bus Reset Interrupt.                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * When bus reset is received during suspend, ACTVIF will be set first,      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * once the UCONbits.SUSPND is clear, then the URSTIF bit will be asserted.  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * This is why URSTIF is checked after ACTVIF.                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                *                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * The USB reset flag is masked when the USB state is in                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * DETACHED_STATE or ATTACHED_STATE, and therefore cannot                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * cause a USB reset event during these two states.                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000594   5068     MOVF      0x68,0x0,0x0       if(UIRbits.URSTIF && UIEbits.URSTIE)    USBProtocolResetHandler();           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000596   0b01     ANDLW     0x1                                                                                             
000598   e004     BZ        0x5a2                                                                                           
00059a   5069     MOVF      0x69,0x0,0x0                                                                                    
00059c   0b01     ANDLW     0x1                                                                                             
00059e   e001     BZ        0x5a2                                                                                           
0005a0   d827     RCALL     0x5f0                                                                                           
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * Task C: Service other USB interrupts                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005a2   5068     MOVF      0x68,0x0,0x0       if(UIRbits.IDLEIF && UIEbits.IDLEIE)                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005a4   0b10     ANDLW     0x10                                                                                            
0005a6   e009     BZ        0x5ba                                                                                           
0005a8   5069     MOVF      0x69,0x0,0x0                                                                                    
0005aa   0b10     ANDLW     0x10                                                                                            
0005ac   e006     BZ        0x5ba                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005ae   8469     BSF       0x69,0x2,0x0           UIEbits.ACTVIE = 1;                     // Enable bus activity interrupt C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005b0   9868     BCF       0x68,0x4,0x0           UIRbits.IDLEIF = 0;                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005b2   826d     BSF       0x6d,0x1,0x0           UCONbits.SUSPND = 1;                    // Put USB module in power conserve C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                           // mode, SIE clock inactive      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                   /* Now, go into power saving */                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005b4   8aa0     BSF       0xa0,0x5,0x0           PIE2bits.USBIE = 1;                     // Set wakeup source             C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005b6   0003     SLEEP                            Sleep();                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005b8   9aa1     BCF       0xa1,0x5,0x0           PIR2bits.USBIF = 0;                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                               }//end if                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005ba   5068     MOVF      0x68,0x0,0x0       if(UIRbits.STALLIF && UIEbits.STALLIE)                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005bc   0b20     ANDLW     0x20                                                                                            
0005be   e009     BZ        0x5d2                                                                                           
0005c0   5069     MOVF      0x69,0x0,0x0                                                                                    
0005c2   0b20     ANDLW     0x20                                                                                            
0005c4   e006     BZ        0x5d2                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005c6   a070     BTFSS     0x70,0x0,0x0           if(UEP0bits.EPSTALL == 1)                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005c8   d003     BRA       0x5d0                                                                                           
                                                   {                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005ca   eca6     CALL      0x54c,0x0                  USBPrepareForNextSetupTrf();        // Firmware Work-Around          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005cc   f002                                                                                                               
0005ce   9070     BCF       0x70,0x0,0x0               UEP0bits.EPSTALL = 0;                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                   }//end if                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005d0   9a68     BCF       0x68,0x5,0x0           UIRbits.STALLIF = 0;                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                               }//end if                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * Pointless to continue servicing if the host has not sent a bus reset.     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * Once bus reset is received, the device transitions into the DEFAULT       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * state and is ready for communication.                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005d2   0e03     MOVLW     0x3                if(usb_device_state < DEFAULT_STATE) return;                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005d4   0100     MOVLB     0x0                                                                                             
0005d6   5d7a     SUBWF     0x7a,0x0,0x1                                                                                    
0005d8   e201     BC        0x5dc                                                                                           
0005da   d009     BRA       0x5ee                                                                                           
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                               /*                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                * Task D: Servicing USB Transaction Complete Interrupt                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                */                                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005dc   5068     MOVF      0x68,0x0,0x0       if(UIRbits.TRNIF && UIEbits.TRNIE)                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005de   0b08     ANDLW     0x8                                                                                             
0005e0   e006     BZ        0x5ee                                                                                           
0005e2   5069     MOVF      0x69,0x0,0x0                                                                                    
0005e4   0b08     ANDLW     0x8                                                                                             
0005e6   e003     BZ        0x5ee                                                                                           
                                               {                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                   /*                                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    * USBCtrlEPService only services transactions over EP0.                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    * It ignores all other EP transactions.                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    */                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005e8   ecc7     CALL      0x38e,0x0              USBCtrlEPService();                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005ea   f001                                                                                                               
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                   /*                                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    * Other EP can be serviced later by responsible device class firmware.  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    * Each device driver knows when an OUT or IN transaction is ready by    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    * checking the buffer ownership bit.                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    * An OUT EP should always be owned by SIE until the data is ready.      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    * An IN EP should always be owned by CPU until the data is ready.       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    *                                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    * Because of this logic, it is not necessary to save the USTAT value    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    * of non-EP0 transactions.                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                    */                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005ec   9668     BCF       0x68,0x3,0x0           UIRbits.TRNIF = 0;                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                               }//end if(UIRbits.TRNIF && UIEbits.TRNIE)                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005ee   0012     RETURN    0x0            }//end USBDriverService                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Function:        void USBProtocolResetHandler(void)                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * PreCondition:    A USB bus reset is received from the host.                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Input:           None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Output:          None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Side Effects:    Currently, this routine flushes any pending USB              C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  transactions. It empties out the USTAT FIFO. This action     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  might not be desirable in some applications.                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Overview:        Once a USB bus reset is received from the host, this         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  routine should be called. It resets the device address to    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  zero, disables all non-EP0 endpoints, initializes EP0 to     C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  be ready for default communication, clears all USB           C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  interrupt flags, unmasks applicable USB interrupts, and      C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                  reinitializes internal state-machine variables.              C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            * Note:            None                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           void USBProtocolResetHandler(void)                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005f0   6a68     CLRF      0x68,0x0           UIR = 0;                        // Clears all USB interrupts                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005f2   0e7b     MOVLW     0x7b               UIE = 0b01111011;               // Enable all interrupts except ACTVIE       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005f4   6e69     MOVWF     0x69,0x0                                                                                        
0005f6   6a6e     CLRF      0x6e,0x0           UADDR = 0x00;                   // Reset to default address                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005f8   0e16     MOVLW     0x16               UEP0 = EP_CTRL|HSHK_EN;         // Init EP0 as a Ctrl EP, see usbdrv.h       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005fa   6e70     MOVWF     0x70,0x0                                                                                        
0005fc   a668     BTFSS     0x68,0x3,0x0       while(UIRbits.TRNIF == 1)       // Flush any pending transactions            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
0005fe   d002     BRA       0x604                                                                                           
000602   d7fc     BRA       0x5fc                                                                                           
000600   9668     BCF       0x68,0x3,0x0           UIRbits.TRNIF = 0;                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000604   986d     BCF       0x6d,0x4,0x0       UCONbits.PKTDIS = 0;            // Make sure packet processing is enabled    C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000606   eca6     CALL      0x54c,0x0          USBPrepareForNextSetupTrf();    // Declared in usbctrltrf.c                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000608   f002                                                                                                               
00060a   0100     MOVLB     0x0                usb_active_cfg = 0;             // Clear active configuration                C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
00060c   6b7c     CLRF      0x7c,0x1                                                                                        
00060e   0100     MOVLB     0x0                usb_device_state = DEFAULT_STATE;                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
000610   0e03     MOVLW     0x3                                                                                             
000612   6f7a     MOVWF     0x7a,0x1                                                                                        
000614   0012     RETURN    0x0            }//end USBProtocolResetHandler                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /** EOF usbdrv.c *************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbdrv.c
                                           /*********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * FileName:        usbdsc.c                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Dependencies:    See INCLUDES section below                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Processor:       PIC18                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Compiler:        C18 2.30.01+                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Company:         Microchip Technology, Inc.                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Software License Agreement                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * civil liability for the breach of the terms and conditions of this            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * license.                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            ********************************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           /*********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * -usbdsc.c-                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * This file contains the USB descriptor information. It is used                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * in conjunction with the usbdsc.h file. When a descriptor is added             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * or removed from the main configuration descriptor, i.e. CFG01,                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * the user must also change the descriptor structure defined in                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * the usbdsc.h file. The structure is used to calculate the                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * descriptor size, i.e. sizeof(CFG01).                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * A typical configuration descriptor consists of:                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * At least one configuration descriptor (USB_CFG_DSC)                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * One or more interface descriptors (USB_INTF_DSC)                              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * One or more endpoint descriptors (USB_EP_DSC)                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Naming Convention:                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * To resolve ambiguity, the naming convention are as followed:                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * - USB_CFG_DSC type should be named cdxx, where xx is the                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *   configuration number. This number should match the actual                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *   index value of this configuration.                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * - USB_INTF_DSC type should be named i<yy>a<zz>, where yy is the               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *   interface number and zz is the alternate interface number.                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * - USB_EP_DSC type should be named ep<##><d>_i<yy>a<zz>, where                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *   ## is the endpoint number and d is the direction of transfer.               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *   The interface name should also be listed as a suffix to identify            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *   which interface does the endpoint belong to.                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Example:                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * If a device has one configuration, two interfaces; interface 0                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * has two endpoints (in and out), and interface 1 has one endpoint(in).         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Then the CFG01 structure in the usbdsc.h should be:                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * #define CFG01 rom struct                            \                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * {   USB_CFG_DSC             cd01;                   \                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *     USB_INTF_DSC            i00a00;                 \                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *     USB_EP_DSC              ep01o_i00a00;           \                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *     USB_EP_DSC              ep01i_i00a00;           \                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *     USB_INTF_DSC            i01a00;                 \                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *     USB_EP_DSC              ep02i_i01a00;           \                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * } cfg01                                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Note the hierarchy of the descriptors above, it follows the USB               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * specification requirement. All endpoints belonging to an interface            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * should be listed immediately after that interface.                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * -------------------------------------------------------------------           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Filling in the descriptor values in the usbdsc.c file:                        C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * -------------------------------------------------------------------           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Most items should be self-explanatory, however, a few will be                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * explained for clarification.                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * [Configuration Descriptor(USB_CFG_DSC)]                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The configuration attribute must always have the _DEFAULT                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * definition at the minimum. Additional options can be ORed                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * to the _DEFAULT attribute. Available options are _SELF and _RWU.              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * These definitions are defined in the usbdefs_std_dsc.h file. The              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * _SELF tells the USB host that this device is self-powered. The                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * _RWU tells the USB host that this device supports Remote Wakeup.              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * [Endpoint Descriptor(USB_EP_DSC)]                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Assume the following example:                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * sizeof(USB_EP_DSC),DSC_EP,_EP01_OUT,_BULK,64,0x00                             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The first two parameters are self-explanatory. They specify the               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * length of this endpoint descriptor (7) and the descriptor type.               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The next parameter identifies the endpoint, the definitions are               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * defined in usbdefs_std_dsc.h and has the following naming                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * convention:                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * _EP<##>_<dir>                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * where ## is the endpoint number and dir is the direction of                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * transfer. The dir has the value of either 'OUT' or 'IN'.                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The next parameter identifies the type of the endpoint. Available             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * options are _BULK, _INT, _ISO, and _CTRL. The _CTRL is not                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * typically used because the default control transfer endpoint is               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * not defined in the USB descriptors. When _ISO option is used,                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * addition options can be ORed to _ISO. Example:                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * _ISO|_AD|_FE                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * This describes the endpoint as an isochronous pipe with adaptive              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * and feedback attributes. See usbdefs_std_dsc.h and the USB                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * specification for details. The next parameter defines the size of             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * the endpoint. The last parameter in the polling interval.                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * -------------------------------------------------------------------           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Adding a USB String                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * -------------------------------------------------------------------           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * A string descriptor array should have the following format:                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * rom struct{byte bLength;byte bDscType;word string[size];}sdxxx={              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * sizeof(sdxxx),DSC_STR,<text>};                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The above structure provides a means for the C compiler to                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * calculate the length of string descriptor sdxxx, where xxx is the             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * index number. The first two bytes of the descriptor are descriptor            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * length and type. The rest <text> are string texts which must be               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * in the unicode format. The unicode format is achieved by declaring            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * each character as a word type. The whole text string is declared              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * as a word array with the number of characters equals to <size>.               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * <size> has to be manually counted and entered into the array                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * declaration. Let's study this through an example:                             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * if the string is "USB" , then the string descriptor should be:                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * (Using index 02)                                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * rom struct{byte bLength;byte bDscType;word string[3];}sd002={                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * sizeof(sd002),DSC_STR,'U','S','B'};                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * A USB project may have multiple strings and the firmware supports             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * the management of multiple strings through a look-up table.                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The look-up table is defined as:                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * rom const unsigned char *rom USB_SD_Ptr[]={&sd000,&sd001,&sd002};             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The above declaration has 3 strings, sd000, sd001, and sd002.                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Strings can be removed or added. sd000 is a specialized string                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * descriptor. It defines the language code, usually this is                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * US English (0x0409). The index of the string must match the index             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * position of the USB_SD_Ptr array, &sd000 must be in position                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * USB_SD_Ptr[0], &sd001 must be in position USB_SD_Ptr[1] and so on.            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The look-up table USB_SD_Ptr is used by the get string handler                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * function in usb9.c.                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * -------------------------------------------------------------------           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The look-up table scheme also applies to the configuration                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * descriptor. A USB device may have multiple configuration                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * descriptors, i.e. CFG01, CFG02, etc. To add a configuration                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * descriptor, user must implement a structure similar to CFG01.                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * The next step is to add the configuration descriptor name, i.e.               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * cfg01, cfg02,.., to the look-up table USB_CD_Ptr. USB_CD_Ptr[0]               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * is a dummy place holder since configuration 0 is the un-configured            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * state according to the definition in the USB specification.                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            ********************************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           /*********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Descriptor specific type definitions are defined in:                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * system\usb\usbdefs\usbdefs_std_dsc.h                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * Configuration information is defined in:                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            * autofiles\usbcfg.h                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                            ********************************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           /** I N C L U D E S *************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           #include "typedefs.h"                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           #include "usb.h"                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           /** C O N S T A N T S ************************************************/          C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           #pragma romdata                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           /* Device Descriptor */                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           rom USB_DEV_DSC device_dsc=                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               sizeof(USB_DEV_DSC),    // Size of this descriptor in bytes                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               DSC_DEV,                // DEVICE descriptor type                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x0200,                 // USB Spec Release Number in BCD format             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x00,                   // Class Code                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x00,                   // Subclass code                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x00,                   // Protocol code                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               EP0_BUFF_SIZE,          // Max packet size for EP0, see usbcfg.h             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           	0x04D8,					//0x04D8,                 // Vendor ID                              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x000b,                 // Product ID: PICDEM FS USB (Boot Mode)             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x0000,                 // Device release number in BCD format               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           	0x00,                   // Manufacturer string index                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x00,                   // Product string index                              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x00,                   // Device serial number string index                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x01                    // Number of possible configurations                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           };                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           /* Configuration 1 Descriptor */                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           CFG01=                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           {                                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               /* Configuration Descriptor */                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               sizeof(USB_CFG_DSC),    // Size of this descriptor in bytes                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               DSC_CFG,                // CONFIGURATION descriptor type                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               sizeof(cfg01),          // Total length of data for this cfg                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               1,                      // Number of interfaces in this cfg                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               1,                      // Index value of this configuration                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0,                      // Configuration string index                        C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               _DEFAULT,               // Attributes, see usbdefs_std_dsc.h                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               50,                     // Max power consumption (2X mA)                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               /* Interface Descriptor */                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               sizeof(USB_INTF_DSC),   // Size of this descriptor in bytes                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               DSC_INTF,               // INTERFACE descriptor type                         C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0,                      // Interface Number                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0,                      // Alternate Setting Number                          C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               2,                      // Number of endpoints in this intf                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x00,                   // Class code                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x00,                   // Subclass code                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0x00,                   // Protocol code                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               0,                      // Interface string index                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               /* Endpoint Descriptors */                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP01_OUT,_BULK,BOOT_EP_SIZE,0x00,                 C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP01_IN,_BULK,BOOT_EP_SIZE,0x00                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           };                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[1];}sd000={                    C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           sizeof(sd000),DSC_STR,0x0409};                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //Manufacturer string                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //rom struct{byte bLength;byte bDscType;word string[11];}MfrString={             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //sizeof(MfrString),DSC_STR,                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //'T','r','i','p','p',' ','L','i','t','e',' '};                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //rom struct{byte bLength;byte bDscType;word string[14];}PrdString={             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //sizeof(PrdString),DSC_STR,                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //'T','r','i','p','p',' ','L','i','t','e',' ','U','P','S'};                      C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //rom struct{byte bLength;byte bDscType;word string[14];}SerialString={          C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //sizeof(SerialString),DSC_STR,                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           //'B','O','O','T'};                                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           #pragma code	USBBOOT                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           /** EOF usbdsc.c ****************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\usbdsc.c
                                           /*********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *********************************************************************           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * FileName:        usbmmap.c                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Dependencies:    See INCLUDES section below                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Processor:       PIC18                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Compiler:        C18 2.30.01+                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Company:         Microchip Technology, Inc.                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Software License Agreement                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * civil liability for the breach of the terms and conditions of this            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * license.                                                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Author               Date        Comment                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            ********************************************************************/           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * -usbmmap.c-                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * USB Memory Map                                                                C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * This file is the USB memory manager; it serves as a compile-time memory       C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * allocator for the USB endpoints. It uses the compile time options passed      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * from usbcfg.h to instantiate endpoints and endpoint buffer.                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Each endpoint requires to have a set of Buffer Descriptor registers(BDT).     C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * A BDT is 4-byte long and has a specific RAM location for each endpoint.       C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The BDT for endpoint 0 out is located at address 0x400 to 0x403.              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The BDT for endpoint 0 in is located at address 0x404 to 0x407.               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The BDT for endpoint 1 out is located at address 0x408 to 0x40B.              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * and so on... The above allocation assumes the Ping-Pong Buffer Mode 0 is      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * used. These locations are already hard-wired in the silicon. The point        C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * of doing instantiation, i.e. volatile far BDT ep0Bo;, is to provide the       C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * C compiler a way to address each variable directly. This is very important    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * because when a register can be accessed directly, it saves execution time     C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * and reduces program size.                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Endpoints are defined using the endpoint number and the direction             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * of transfer. For simplicity, usbmmap.c only uses the endpoint number          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * in the BDT register allocation scheme. This means if the usbcfg.h states      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * that the MAX_EP_NUMBER is number 1, then four BDTs will be                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * instantiated: one each for endpoint0 in and endpoint0 out, which must         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * always be instantiated for control transfer by default, and one each sets     C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * for endpoint1 in and endpoint1 out. The naming convention for instantiating   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * BDT is                                                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * ep<#>B<d>                                                                     C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * where # is the endpoint number, and d is the direction of                     C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * transfer, which could be either <i> or <o>.                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The USB memory manager uses MAX_EP_NUMBER, as defined in usbcfg.h, to define  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * the endpoints to be instantiated. This represents the highest endpoint        C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * number to be allocated, not how many endpoints are used. Since the BDTs for   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * endpoints have hardware-assigned addresses in Bank 4, setting this value too  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * high may lead to inefficient use of data RAM. For example, if an application  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * uses only endpoints EP0 and EP4, then the MAX_EP_NUMBER is 4, and not 2.      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The in-between endpoint BDTs in this example (EP1, EP2, and EP3) go unused,   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * and the 24 bytes of memory associated with them are wasted. It does not make  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * much sense to skip endpoints, but the final decision lies with the user.      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The next step is to assign the instantiated BDTs to different                 C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * USB functions. The firmware framework fundamentally assumes that every USB    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * function should know which endpoint it is using, i.e., the default control    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * transfer should know that it is using endpoint 0 in and endpoint 0 out.       C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * A HID class can choose which endpoint it wants to use, but once chosen, it    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * should always know the number of the endpoint.                                C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The assignment of endpoints to USB functions is managed centrally             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * in usbcfg.h. This helps prevent the mistake of having more                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * than one USB function using the same endpoint. The "Endpoint Allocation"      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * section in usbcfg.h provides examples for how to map USB endpoints to USB     C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * functions.                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Quite a few things can be mapped in that section. There is no                 C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * one correct way to do the mapping and the user has the choice to              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * choose a method that is most suitable to the application.                     C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Typically, however, a user will want to map the following for a given         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * USB interface function:                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * 1. The USB interface ID                                                       C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * 2. The endpoint control registers (UEPn)                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * 3. The BDT registers (ep<#>B<d>)                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * 4. The endpoint size                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Example: Assume a USB device class "foo", which uses one out endpoint         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *          of size 64-byte and one in endpoint of size 64-byte, then:           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * #define FOO_INTF_ID          0x00                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * #define FOO_UEP              UEP1                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * #define FOO_BD_OUT           ep1Bo                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * #define FOO_BD_IN            ep1Bi                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * #define FOO_EP_SIZE          64                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The mapping above has chosen class "foo" to use endpoint 1.                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The names are arbitrary and can be anything other than FOO_??????.            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * For abstraction, the code for class "foo" should use the abstract             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * definitions of FOO_BD_OUT,FOO_BD_IN, and not ep1Bo or ep1Bi.                  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Note that the endpoint size defined in the usbcfg.h file is again             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * used in the usbmmap.c file. This shows that the relationship between          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * the two files are tightly related.                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The endpoint buffer for each USB function must be located in the              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * dual-port RAM area and has to come after all the BDTs have been               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * instantiated. An example declaration is:                                      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * volatile far unsigned char[FOO_EP_SIZE] data;                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * The 'volatile' keyword tells the compiler not to perform any code             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * optimization on this variable because its content could be modified           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * by the hardware. The 'far' keyword tells the compiler that this variable      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * is not located in the Access RAM area (0x000 - 0x05F).                        C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * For the variable to be globally accessible by other files, it should be       C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * declared in the header file usbmmap.h as an extern definition, such as        C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * extern volatile far unsigned char[FOO_EP_SIZE] data;                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Conclusion:                                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * In a short summary, the dependencies between usbcfg and usbmmap can           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * be shown as:                                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * usbcfg[MAX_EP_NUMBER] -> usbmmap                                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * usbmmap[ep<#>B<d>] -> usbcfg                                                  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * usbcfg[EP size] -> usbmmap                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * usbcfg[abstract ep definitions] -> usb9/hid/cdc/etc class code                C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * usbmmap[endpoint buffer variable] -> usb9/hid/cdc/etc class code              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Data mapping provides a means for direct addressing of BDT and endpoint       C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * buffer. This means less usage of pointers, which equates to a faster and      C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * smaller program code.                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           /** I N C L U D E S **********************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #include "typedefs.h"                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #include "usb.h"                                                                 C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           /** U S B  G L O B A L  V A R I A B L E S ************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #pragma udata                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           byte usb_device_state;          // Device States: DETACHED, ATTACHED, ...        C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           USB_DEVICE_STATUS usb_stat;     // Global USB flags                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           byte usb_active_cfg;            // Value of current configuration                C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           byte usb_alt_intf[MAX_NUM_INT]; // Array to keep track of the current alternate  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                           // setting for each interface ID                 C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           /** U S B  F I X E D  L O C A T I O N  V A R I A B L E S *********************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #pragma udata usbram4=0x400     //See Linker Script,usb4:0x400-0x4FF(256-byte)   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Section A: Buffer Descriptor Table                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * - 0x400 - 0x4FF(max)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * - MAX_EP_NUMBER is defined in autofiles\usbcfg.h                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * - BDT data type is defined in system\usb\usbmmap.h                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(0 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep0Bo;         //Endpoint #0 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep0Bi;         //Endpoint #0 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(1 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep1Bo;         //Endpoint #1 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep1Bi;         //Endpoint #1 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(2 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep2Bo;         //Endpoint #2 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep2Bi;         //Endpoint #2 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(3 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep3Bo;         //Endpoint #3 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep3Bi;         //Endpoint #3 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(4 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep4Bo;         //Endpoint #4 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep4Bi;         //Endpoint #4 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(5 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep5Bo;         //Endpoint #5 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep5Bi;         //Endpoint #5 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(6 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep6Bo;         //Endpoint #6 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep6Bi;         //Endpoint #6 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(7 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep7Bo;         //Endpoint #7 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep7Bi;         //Endpoint #7 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(8 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep8Bo;         //Endpoint #8 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep8Bi;         //Endpoint #8 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(9 <= MAX_EP_NUMBER)                                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep9Bo;         //Endpoint #9 BD Out                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep9Bi;         //Endpoint #9 BD In                              C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(10 <= MAX_EP_NUMBER)                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep10Bo;        //Endpoint #10 BD Out                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep10Bi;        //Endpoint #10 BD In                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(11 <= MAX_EP_NUMBER)                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep11Bo;        //Endpoint #11 BD Out                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep11Bi;        //Endpoint #11 BD In                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(12 <= MAX_EP_NUMBER)                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep12Bo;        //Endpoint #12 BD Out                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep12Bi;        //Endpoint #12 BD In                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(13 <= MAX_EP_NUMBER)                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep13Bo;        //Endpoint #13 BD Out                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep13Bi;        //Endpoint #13 BD In                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(14 <= MAX_EP_NUMBER)                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep14Bo;        //Endpoint #14 BD Out                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep14Bi;        //Endpoint #14 BD In                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #if(15 <= MAX_EP_NUMBER)                                                         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep15Bo;        //Endpoint #15 BD Out                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BDT ep15Bi;        //Endpoint #15 BD In                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #endif                                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Section B: EP0 Buffer Space                                                   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            ******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * - Two buffer areas are defined:                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *   A. CTRL_TRF_SETUP                                                           C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *      - Size = EP0_BUFF_SIZE as defined in autofiles\usbcfg.h                  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *      - Detailed data structure allows direct adddressing of bits and bytes.   C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *   B. CTRL_TRF_DATA                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *      - Size = EP0_BUFF_SIZE as defined in autofiles\usbcfg.h                  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *      - Data structure allows direct adddressing of the first 8 bytes.         C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * - Both data types are defined in system\usb\usbdefs\usbdefs_ep0_buff.h        C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far CTRL_TRF_SETUP SetupPkt;                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far CTRL_TRF_DATA CtrlTrfData;                                          C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           /******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            * Section C: Buffer                                                             C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            ******************************************************************************  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *                                                                               C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                            *****************************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           volatile far BOOT_DATA_PACKET dataPacket;                                        C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           #pragma udata                                                                    C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                                                                                                            C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
                                           /** EOF usbmmap.c ************************************************************/  C:\fw\midicontroller\x001x\bootloader\x005x\usbmmap.c
